/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.api;

import com.equinix.openapi.ApiException;
import com.equinix.openapi.metal.v1.model.CapacityCheckPerFacilityList;
import com.equinix.openapi.metal.v1.model.CapacityCheckPerMetroList;
import com.equinix.openapi.metal.v1.model.CapacityInput;
import com.equinix.openapi.metal.v1.model.CapacityList;
import com.equinix.openapi.metal.v1.model.CapacityPerMetroInput;
import com.equinix.openapi.metal.v1.model.Error;
import com.equinix.openapi.metal.v1.model.MetroCapacityList;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CapacityApi
 */
@Disabled
public class CapacityApiTest {

    private final CapacityApi api = new CapacityApi();

    /**
     * Check capacity
     *
     * Validates if a deploy can be fulfilled.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkCapacityForFacilityTest() throws ApiException {
        CapacityInput capacityInput = null;
        CapacityCheckPerFacilityList response = api.checkCapacityForFacility(capacityInput);
        // TODO: test validations
    }

    /**
     * Check capacity for a metro
     *
     * Validates if a deploy can be fulfilled in a metro.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkCapacityForMetroTest() throws ApiException {
        CapacityPerMetroInput capacityPerMetroInput = null;
        CapacityCheckPerMetroList response = api.checkCapacityForMetro(capacityPerMetroInput);
        // TODO: test validations
    }

    /**
     * View capacity
     *
     * Returns a list of facilities and plans with their current capacity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findCapacityForFacilityTest() throws ApiException {
        CapacityList response = api.findCapacityForFacility();
        // TODO: test validations
    }

    /**
     * View capacity for metros
     *
     * Returns a list of metros and plans with their current capacity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findCapacityForMetroTest() throws ApiException {
        MetroCapacityList response = api.findCapacityForMetro();
        // TODO: test validations
    }

    /**
     * View available hardware plans per Facility for given organization
     *
     * Returns a list of facilities and plans with their current capacity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findOrganizationCapacityPerFacilityTest() throws ApiException {
        UUID id = null;
        CapacityList response = api.findOrganizationCapacityPerFacility(id);
        // TODO: test validations
    }

    /**
     * View available hardware plans per Metro for given organization
     *
     * Returns a list of metros and plans with their current capacity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findOrganizationCapacityPerMetroTest() throws ApiException {
        UUID id = null;
        MetroCapacityList response = api.findOrganizationCapacityPerMetro(id);
        // TODO: test validations
    }

}
