/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.api;

import com.equinix.openapi.ApiException;
import com.equinix.openapi.metal.v1.model.BgpConfig;
import com.equinix.openapi.metal.v1.model.BgpConfigRequestInput;
import com.equinix.openapi.metal.v1.model.BgpSession;
import com.equinix.openapi.metal.v1.model.BgpSessionList;
import com.equinix.openapi.metal.v1.model.Error;
import com.equinix.openapi.metal.v1.model.GlobalBgpRangeList;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BgpApi
 */
@Disabled
public class BgpApiTest {

    private final BgpApi api = new BgpApi();

    /**
     * Delete the BGP session
     *
     * Deletes the BGP session.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBgpSessionTest() throws ApiException {
        UUID id = null;
        api.deleteBgpSession(id);
        // TODO: test validations
    }

    /**
     * Retrieve a bgp config
     *
     * Returns a bgp config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findBgpConfigByProjectTest() throws ApiException {
        UUID id = null;
        List<String> include = null;
        List<String> exclude = null;
        BgpConfig response = api.findBgpConfigByProject(id, include, exclude);
        // TODO: test validations
    }

    /**
     * Retrieve a BGP session
     *
     * Returns a BGP session
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findBgpSessionByIdTest() throws ApiException {
        UUID id = null;
        List<String> include = null;
        List<String> exclude = null;
        BgpSession response = api.findBgpSessionById(id, include, exclude);
        // TODO: test validations
    }

    /**
     * Retrieve all global bgp ranges
     *
     * Returns all global bgp ranges for a project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findGlobalBgpRangesTest() throws ApiException {
        UUID id = null;
        GlobalBgpRangeList response = api.findGlobalBgpRanges(id);
        // TODO: test validations
    }

    /**
     * Retrieve all BGP sessions for project
     *
     * Provides a listing of available BGP sessions for the project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findProjectBgpSessionsTest() throws ApiException {
        UUID id = null;
        BgpSessionList response = api.findProjectBgpSessions(id);
        // TODO: test validations
    }

    /**
     * Requesting bgp config
     *
     * Requests to enable bgp configuration for a project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void requestBgpConfigTest() throws ApiException {
        UUID id = null;
        BgpConfigRequestInput bgpConfigRequestInput = null;
        api.requestBgpConfig(id, bgpConfigRequestInput);
        // TODO: test validations
    }

    /**
     * Update the BGP session
     *
     * Updates the BGP session by either enabling or disabling the default route functionality.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBgpSessionTest() throws ApiException {
        UUID id = null;
        Boolean body = null;
        api.updateBgpSession(id, body);
        // TODO: test validations
    }

}
