/**
 * Packet API
 * This is the API for Packet. Interact with your devices, user account, and projects.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: help@packet.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package net.packet.client.api;

import com.sun.jersey.api.client.GenericType;

import net.packet.client.ApiException;
import net.packet.client.ApiClient;
import net.packet.client.Configuration;
import net.packet.client.model.*;
import net.packet.client.Pair;

import net.packet.client.model.Timeframe;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-07T12:34:34.416-05:00")
public class TrafficApi {
  private ApiClient apiClient;

  public TrafficApi() {
    this(Configuration.getDefaultApiClient());
  }

  public TrafficApi(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * Retrieve device traffic
   * Returns traffic for a specific device.
   * @param id Device UUID (required)
   * @param direction Traffic direction (required)
   * @param timeframe Traffic timeframe (required)
   * @param interval Traffic interval (optional)
   * @param bucket Traffic bucket (optional)
   * @throws ApiException if fails to make API call
   */
  public void findTraffic(String id, String direction, Timeframe timeframe, String interval, String bucket) throws ApiException {
    Object localVarPostBody = timeframe;
    
    // verify the required parameter 'id' is set
    if (id == null) {
      throw new ApiException(400, "Missing the required parameter 'id' when calling findTraffic");
    }
    
    // verify the required parameter 'direction' is set
    if (direction == null) {
      throw new ApiException(400, "Missing the required parameter 'direction' when calling findTraffic");
    }
    
    // verify the required parameter 'timeframe' is set
    if (timeframe == null) {
      throw new ApiException(400, "Missing the required parameter 'timeframe' when calling findTraffic");
    }
    
    // create path and map variables
    String localVarPath = "/devices/{id}/traffic".replaceAll("\\{format\\}","json")
      .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPairs("", "direction", direction));
    localVarQueryParams.addAll(apiClient.parameterToPairs("", "interval", interval));
    localVarQueryParams.addAll(apiClient.parameterToPairs("", "bucket", bucket));

    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "x_auth_token" };


    apiClient.invokeAPI(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, null);
  }
}
