/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.packet.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import net.packet.client.model.BgpSession;
import net.packet.client.model.GlobalBgpRange;
import net.packet.client.model.Href;
import org.threeten.bp.OffsetDateTime;

/**
 * BgpConfig
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-12-14T20:42:56.777Z")
public class BgpConfig {
  @SerializedName("id")
  private UUID id = null;

  /**
   * Status of the BGP Config. Status \&quot;requested\&quot; is valid only with the \&quot;global\&quot; deployment_type.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    REQUESTED("requested"),
    
    ENABLED("enabled"),
    
    DISABLED("disabled");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  /**
   * In a Local BGP deployment, a customer uses an internal ASN to control routes within a single Equinix Metal datacenter. This means that the routes are never advertised to the global Internet. Global BGP, on the other hand, requires a customer to have a registered ASN and IP space. 
   */
  @JsonAdapter(DeploymentTypeEnum.Adapter.class)
  public enum DeploymentTypeEnum {
    GLOBAL("global"),
    
    LOCAL("local");

    private String value;

    DeploymentTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DeploymentTypeEnum fromValue(String text) {
      for (DeploymentTypeEnum b : DeploymentTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DeploymentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DeploymentTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DeploymentTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DeploymentTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("deployment_type")
  private DeploymentTypeEnum deploymentType = null;

  @SerializedName("asn")
  private Integer asn = null;

  @SerializedName("route_object")
  private String routeObject = null;

  @SerializedName("md5")
  private String md5 = null;

  @SerializedName("max_prefix")
  private Integer maxPrefix = null;

  @SerializedName("project")
  private Href project = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("requested_at")
  private OffsetDateTime requestedAt = null;

  @SerializedName("sessions")
  private List<BgpSession> sessions = null;

  @SerializedName("ranges")
  private List<GlobalBgpRange> ranges = null;

  @SerializedName("href")
  private String href = null;

  public BgpConfig id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public BgpConfig status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the BGP Config. Status \&quot;requested\&quot; is valid only with the \&quot;global\&quot; deployment_type.
   * @return status
  **/
  @ApiModelProperty(value = "Status of the BGP Config. Status \"requested\" is valid only with the \"global\" deployment_type.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public BgpConfig deploymentType(DeploymentTypeEnum deploymentType) {
    this.deploymentType = deploymentType;
    return this;
  }

   /**
   * In a Local BGP deployment, a customer uses an internal ASN to control routes within a single Equinix Metal datacenter. This means that the routes are never advertised to the global Internet. Global BGP, on the other hand, requires a customer to have a registered ASN and IP space. 
   * @return deploymentType
  **/
  @ApiModelProperty(example = "local", value = "In a Local BGP deployment, a customer uses an internal ASN to control routes within a single Equinix Metal datacenter. This means that the routes are never advertised to the global Internet. Global BGP, on the other hand, requires a customer to have a registered ASN and IP space. ")
  public DeploymentTypeEnum getDeploymentType() {
    return deploymentType;
  }

  public void setDeploymentType(DeploymentTypeEnum deploymentType) {
    this.deploymentType = deploymentType;
  }

  public BgpConfig asn(Integer asn) {
    this.asn = asn;
    return this;
  }

   /**
   * Autonomous System Number. ASN is required with Global BGP. With Local BGP the private ASN, 65000, is assigned.
   * @return asn
  **/
  @ApiModelProperty(example = "65000", value = "Autonomous System Number. ASN is required with Global BGP. With Local BGP the private ASN, 65000, is assigned.")
  public Integer getAsn() {
    return asn;
  }

  public void setAsn(Integer asn) {
    this.asn = asn;
  }

  public BgpConfig routeObject(String routeObject) {
    this.routeObject = routeObject;
    return this;
  }

   /**
   * Specifies AS-MACRO (aka AS-SET) to use when building client route filters
   * @return routeObject
  **/
  @ApiModelProperty(value = "Specifies AS-MACRO (aka AS-SET) to use when building client route filters")
  public String getRouteObject() {
    return routeObject;
  }

  public void setRouteObject(String routeObject) {
    this.routeObject = routeObject;
  }

  public BgpConfig md5(String md5) {
    this.md5 = md5;
    return this;
  }

   /**
   * (Optional) Password for BGP session in plaintext (not a checksum)
   * @return md5
  **/
  @ApiModelProperty(value = "(Optional) Password for BGP session in plaintext (not a checksum)")
  public String getMd5() {
    return md5;
  }

  public void setMd5(String md5) {
    this.md5 = md5;
  }

  public BgpConfig maxPrefix(Integer maxPrefix) {
    this.maxPrefix = maxPrefix;
    return this;
  }

   /**
   * The maximum number of route filters allowed per server
   * @return maxPrefix
  **/
  @ApiModelProperty(value = "The maximum number of route filters allowed per server")
  public Integer getMaxPrefix() {
    return maxPrefix;
  }

  public void setMaxPrefix(Integer maxPrefix) {
    this.maxPrefix = maxPrefix;
  }

  public BgpConfig project(Href project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(value = "")
  public Href getProject() {
    return project;
  }

  public void setProject(Href project) {
    this.project = project;
  }

  public BgpConfig createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public BgpConfig requestedAt(OffsetDateTime requestedAt) {
    this.requestedAt = requestedAt;
    return this;
  }

   /**
   * Get requestedAt
   * @return requestedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getRequestedAt() {
    return requestedAt;
  }

  public void setRequestedAt(OffsetDateTime requestedAt) {
    this.requestedAt = requestedAt;
  }

  public BgpConfig sessions(List<BgpSession> sessions) {
    this.sessions = sessions;
    return this;
  }

  public BgpConfig addSessionsItem(BgpSession sessionsItem) {
    if (this.sessions == null) {
      this.sessions = new ArrayList<BgpSession>();
    }
    this.sessions.add(sessionsItem);
    return this;
  }

   /**
   * The direct connections between neighboring routers that want to exchange routing information.
   * @return sessions
  **/
  @ApiModelProperty(value = "The direct connections between neighboring routers that want to exchange routing information.")
  public List<BgpSession> getSessions() {
    return sessions;
  }

  public void setSessions(List<BgpSession> sessions) {
    this.sessions = sessions;
  }

  public BgpConfig ranges(List<GlobalBgpRange> ranges) {
    this.ranges = ranges;
    return this;
  }

  public BgpConfig addRangesItem(GlobalBgpRange rangesItem) {
    if (this.ranges == null) {
      this.ranges = new ArrayList<GlobalBgpRange>();
    }
    this.ranges.add(rangesItem);
    return this;
  }

   /**
   * The IP block ranges associated to the ASN (Populated in Global BGP only)
   * @return ranges
  **/
  @ApiModelProperty(value = "The IP block ranges associated to the ASN (Populated in Global BGP only)")
  public List<GlobalBgpRange> getRanges() {
    return ranges;
  }

  public void setRanges(List<GlobalBgpRange> ranges) {
    this.ranges = ranges;
  }

  public BgpConfig href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @ApiModelProperty(value = "")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BgpConfig bgpConfig = (BgpConfig) o;
    return Objects.equals(this.id, bgpConfig.id) &&
        Objects.equals(this.status, bgpConfig.status) &&
        Objects.equals(this.deploymentType, bgpConfig.deploymentType) &&
        Objects.equals(this.asn, bgpConfig.asn) &&
        Objects.equals(this.routeObject, bgpConfig.routeObject) &&
        Objects.equals(this.md5, bgpConfig.md5) &&
        Objects.equals(this.maxPrefix, bgpConfig.maxPrefix) &&
        Objects.equals(this.project, bgpConfig.project) &&
        Objects.equals(this.createdAt, bgpConfig.createdAt) &&
        Objects.equals(this.requestedAt, bgpConfig.requestedAt) &&
        Objects.equals(this.sessions, bgpConfig.sessions) &&
        Objects.equals(this.ranges, bgpConfig.ranges) &&
        Objects.equals(this.href, bgpConfig.href);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, status, deploymentType, asn, routeObject, md5, maxPrefix, project, createdAt, requestedAt, sessions, ranges, href);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BgpConfig {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    deploymentType: ").append(toIndentedString(deploymentType)).append("\n");
    sb.append("    asn: ").append(toIndentedString(asn)).append("\n");
    sb.append("    routeObject: ").append(toIndentedString(routeObject)).append("\n");
    sb.append("    md5: ").append(toIndentedString(md5)).append("\n");
    sb.append("    maxPrefix: ").append(toIndentedString(maxPrefix)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    requestedAt: ").append(toIndentedString(requestedAt)).append("\n");
    sb.append("    sessions: ").append(toIndentedString(sessions)).append("\n");
    sb.append("    ranges: ").append(toIndentedString(ranges)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

