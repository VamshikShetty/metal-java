/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.packet.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import net.packet.client.model.AuthTokenUser;
import net.packet.client.model.Event;
import net.packet.client.model.Facility;
import net.packet.client.model.Href;
import net.packet.client.model.IPAssignment;
import net.packet.client.model.OperatingSystem;
import net.packet.client.model.Plan;
import org.threeten.bp.OffsetDateTime;

/**
 * Device
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-12-14T20:42:56.777Z")
public class Device {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("short_id")
  private String shortId = null;

  @SerializedName("hostname")
  private String hostname = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("image_url")
  private String imageUrl = null;

  @SerializedName("billing_cycle")
  private String billingCycle = null;

  @SerializedName("user")
  private String user = null;

  @SerializedName("iqn")
  private String iqn = null;

  @SerializedName("locked")
  private Boolean locked = null;

  @SerializedName("bonding_mode")
  private Integer bondingMode = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("spot_instance")
  private Boolean spotInstance = null;

  @SerializedName("spot_price_max")
  private Float spotPriceMax = null;

  @SerializedName("termination_time")
  private OffsetDateTime terminationTime = null;

  @SerializedName("customdata")
  private Object customdata = null;

  @SerializedName("provisioning_percentage")
  private Float provisioningPercentage = null;

  @SerializedName("operating_system")
  private OperatingSystem operatingSystem = null;

  @SerializedName("always_pxe")
  private Boolean alwaysPxe = null;

  @SerializedName("ipxe_script_url")
  private String ipxeScriptUrl = null;

  @SerializedName("facility")
  private Facility facility = null;

  @SerializedName("metro")
  private AuthTokenUser metro = null;

  @SerializedName("plan")
  private Plan plan = null;

  @SerializedName("userdata")
  private String userdata = null;

  @SerializedName("root_password")
  private String rootPassword = null;

  @SerializedName("switch_uuid")
  private String switchUuid = null;

  @SerializedName("network_ports")
  private AuthTokenUser networkPorts = null;

  @SerializedName("href")
  private String href = null;

  @SerializedName("project")
  private AuthTokenUser project = null;

  @SerializedName("project_lite")
  private AuthTokenUser projectLite = null;

  @SerializedName("volumes")
  private List<Href> volumes = null;

  @SerializedName("hardware_reservation")
  private Href hardwareReservation = null;

  @SerializedName("ssh_keys")
  private List<Href> sshKeys = null;

  @SerializedName("ip_addresses")
  private List<IPAssignment> ipAddresses = null;

  @SerializedName("provisioning_events")
  private List<Event> provisioningEvents = null;

  public Device id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public Device shortId(String shortId) {
    this.shortId = shortId;
    return this;
  }

   /**
   * Get shortId
   * @return shortId
  **/
  @ApiModelProperty(value = "")
  public String getShortId() {
    return shortId;
  }

  public void setShortId(String shortId) {
    this.shortId = shortId;
  }

  public Device hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @ApiModelProperty(value = "")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public Device description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Device state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public Device tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public Device addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public Device imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @ApiModelProperty(value = "")
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }

  public Device billingCycle(String billingCycle) {
    this.billingCycle = billingCycle;
    return this;
  }

   /**
   * Get billingCycle
   * @return billingCycle
  **/
  @ApiModelProperty(value = "")
  public String getBillingCycle() {
    return billingCycle;
  }

  public void setBillingCycle(String billingCycle) {
    this.billingCycle = billingCycle;
  }

  public Device user(String user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(value = "")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }

  public Device iqn(String iqn) {
    this.iqn = iqn;
    return this;
  }

   /**
   * Get iqn
   * @return iqn
  **/
  @ApiModelProperty(value = "")
  public String getIqn() {
    return iqn;
  }

  public void setIqn(String iqn) {
    this.iqn = iqn;
  }

  public Device locked(Boolean locked) {
    this.locked = locked;
    return this;
  }

   /**
   * Get locked
   * @return locked
  **/
  @ApiModelProperty(value = "")
  public Boolean isLocked() {
    return locked;
  }

  public void setLocked(Boolean locked) {
    this.locked = locked;
  }

  public Device bondingMode(Integer bondingMode) {
    this.bondingMode = bondingMode;
    return this;
  }

   /**
   * Get bondingMode
   * @return bondingMode
  **/
  @ApiModelProperty(value = "")
  public Integer getBondingMode() {
    return bondingMode;
  }

  public void setBondingMode(Integer bondingMode) {
    this.bondingMode = bondingMode;
  }

  public Device createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Device updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Device spotInstance(Boolean spotInstance) {
    this.spotInstance = spotInstance;
    return this;
  }

   /**
   * Whether or not the device is a spot instance.
   * @return spotInstance
  **/
  @ApiModelProperty(value = "Whether or not the device is a spot instance.")
  public Boolean isSpotInstance() {
    return spotInstance;
  }

  public void setSpotInstance(Boolean spotInstance) {
    this.spotInstance = spotInstance;
  }

  public Device spotPriceMax(Float spotPriceMax) {
    this.spotPriceMax = spotPriceMax;
    return this;
  }

   /**
   * The maximum price per hour you are willing to pay to keep this spot instance.  If you are outbid, the termination will be set allowing two minutes before shutdown.
   * @return spotPriceMax
  **/
  @ApiModelProperty(value = "The maximum price per hour you are willing to pay to keep this spot instance.  If you are outbid, the termination will be set allowing two minutes before shutdown.")
  public Float getSpotPriceMax() {
    return spotPriceMax;
  }

  public void setSpotPriceMax(Float spotPriceMax) {
    this.spotPriceMax = spotPriceMax;
  }

  public Device terminationTime(OffsetDateTime terminationTime) {
    this.terminationTime = terminationTime;
    return this;
  }

   /**
   * When the device will be terminated. This is commonly set in advance for ephemeral spot market instances but this field may also be set with on-demand and reservation instances to automatically delete the resource at a given time. The termination time can also be used to release a hardware reservation instance at a given time, keeping the reservation open for other uses.  On a spot market device, the termination time will be set automatically when outbid.
   * @return terminationTime
  **/
  @ApiModelProperty(value = "When the device will be terminated. This is commonly set in advance for ephemeral spot market instances but this field may also be set with on-demand and reservation instances to automatically delete the resource at a given time. The termination time can also be used to release a hardware reservation instance at a given time, keeping the reservation open for other uses.  On a spot market device, the termination time will be set automatically when outbid.")
  public OffsetDateTime getTerminationTime() {
    return terminationTime;
  }

  public void setTerminationTime(OffsetDateTime terminationTime) {
    this.terminationTime = terminationTime;
  }

  public Device customdata(Object customdata) {
    this.customdata = customdata;
    return this;
  }

   /**
   * Get customdata
   * @return customdata
  **/
  @ApiModelProperty(value = "")
  public Object getCustomdata() {
    return customdata;
  }

  public void setCustomdata(Object customdata) {
    this.customdata = customdata;
  }

  public Device provisioningPercentage(Float provisioningPercentage) {
    this.provisioningPercentage = provisioningPercentage;
    return this;
  }

   /**
   * Only visible while device provisioning
   * @return provisioningPercentage
  **/
  @ApiModelProperty(value = "Only visible while device provisioning")
  public Float getProvisioningPercentage() {
    return provisioningPercentage;
  }

  public void setProvisioningPercentage(Float provisioningPercentage) {
    this.provisioningPercentage = provisioningPercentage;
  }

  public Device operatingSystem(OperatingSystem operatingSystem) {
    this.operatingSystem = operatingSystem;
    return this;
  }

   /**
   * Get operatingSystem
   * @return operatingSystem
  **/
  @ApiModelProperty(value = "")
  public OperatingSystem getOperatingSystem() {
    return operatingSystem;
  }

  public void setOperatingSystem(OperatingSystem operatingSystem) {
    this.operatingSystem = operatingSystem;
  }

  public Device alwaysPxe(Boolean alwaysPxe) {
    this.alwaysPxe = alwaysPxe;
    return this;
  }

   /**
   * Get alwaysPxe
   * @return alwaysPxe
  **/
  @ApiModelProperty(value = "")
  public Boolean isAlwaysPxe() {
    return alwaysPxe;
  }

  public void setAlwaysPxe(Boolean alwaysPxe) {
    this.alwaysPxe = alwaysPxe;
  }

  public Device ipxeScriptUrl(String ipxeScriptUrl) {
    this.ipxeScriptUrl = ipxeScriptUrl;
    return this;
  }

   /**
   * Get ipxeScriptUrl
   * @return ipxeScriptUrl
  **/
  @ApiModelProperty(value = "")
  public String getIpxeScriptUrl() {
    return ipxeScriptUrl;
  }

  public void setIpxeScriptUrl(String ipxeScriptUrl) {
    this.ipxeScriptUrl = ipxeScriptUrl;
  }

  public Device facility(Facility facility) {
    this.facility = facility;
    return this;
  }

   /**
   * Get facility
   * @return facility
  **/
  @ApiModelProperty(value = "")
  public Facility getFacility() {
    return facility;
  }

  public void setFacility(Facility facility) {
    this.facility = facility;
  }

  public Device metro(AuthTokenUser metro) {
    this.metro = metro;
    return this;
  }

   /**
   * Get metro
   * @return metro
  **/
  @ApiModelProperty(value = "")
  public AuthTokenUser getMetro() {
    return metro;
  }

  public void setMetro(AuthTokenUser metro) {
    this.metro = metro;
  }

  public Device plan(Plan plan) {
    this.plan = plan;
    return this;
  }

   /**
   * Get plan
   * @return plan
  **/
  @ApiModelProperty(value = "")
  public Plan getPlan() {
    return plan;
  }

  public void setPlan(Plan plan) {
    this.plan = plan;
  }

  public Device userdata(String userdata) {
    this.userdata = userdata;
    return this;
  }

   /**
   * Get userdata
   * @return userdata
  **/
  @ApiModelProperty(value = "")
  public String getUserdata() {
    return userdata;
  }

  public void setUserdata(String userdata) {
    this.userdata = userdata;
  }

  public Device rootPassword(String rootPassword) {
    this.rootPassword = rootPassword;
    return this;
  }

   /**
   * Root password is automatically generated when server is provisioned and it is removed after 24 hours
   * @return rootPassword
  **/
  @ApiModelProperty(value = "Root password is automatically generated when server is provisioned and it is removed after 24 hours")
  public String getRootPassword() {
    return rootPassword;
  }

  public void setRootPassword(String rootPassword) {
    this.rootPassword = rootPassword;
  }

  public Device switchUuid(String switchUuid) {
    this.switchUuid = switchUuid;
    return this;
  }

   /**
   * Switch short id. This can be used to determine if two devices are connected to the same switch, for example.
   * @return switchUuid
  **/
  @ApiModelProperty(value = "Switch short id. This can be used to determine if two devices are connected to the same switch, for example.")
  public String getSwitchUuid() {
    return switchUuid;
  }

  public void setSwitchUuid(String switchUuid) {
    this.switchUuid = switchUuid;
  }

  public Device networkPorts(AuthTokenUser networkPorts) {
    this.networkPorts = networkPorts;
    return this;
  }

   /**
   * Get networkPorts
   * @return networkPorts
  **/
  @ApiModelProperty(value = "")
  public AuthTokenUser getNetworkPorts() {
    return networkPorts;
  }

  public void setNetworkPorts(AuthTokenUser networkPorts) {
    this.networkPorts = networkPorts;
  }

  public Device href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @ApiModelProperty(value = "")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public Device project(AuthTokenUser project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(value = "")
  public AuthTokenUser getProject() {
    return project;
  }

  public void setProject(AuthTokenUser project) {
    this.project = project;
  }

  public Device projectLite(AuthTokenUser projectLite) {
    this.projectLite = projectLite;
    return this;
  }

   /**
   * Get projectLite
   * @return projectLite
  **/
  @ApiModelProperty(value = "")
  public AuthTokenUser getProjectLite() {
    return projectLite;
  }

  public void setProjectLite(AuthTokenUser projectLite) {
    this.projectLite = projectLite;
  }

  public Device volumes(List<Href> volumes) {
    this.volumes = volumes;
    return this;
  }

  public Device addVolumesItem(Href volumesItem) {
    if (this.volumes == null) {
      this.volumes = new ArrayList<Href>();
    }
    this.volumes.add(volumesItem);
    return this;
  }

   /**
   * Get volumes
   * @return volumes
  **/
  @ApiModelProperty(value = "")
  public List<Href> getVolumes() {
    return volumes;
  }

  public void setVolumes(List<Href> volumes) {
    this.volumes = volumes;
  }

  public Device hardwareReservation(Href hardwareReservation) {
    this.hardwareReservation = hardwareReservation;
    return this;
  }

   /**
   * Get hardwareReservation
   * @return hardwareReservation
  **/
  @ApiModelProperty(value = "")
  public Href getHardwareReservation() {
    return hardwareReservation;
  }

  public void setHardwareReservation(Href hardwareReservation) {
    this.hardwareReservation = hardwareReservation;
  }

  public Device sshKeys(List<Href> sshKeys) {
    this.sshKeys = sshKeys;
    return this;
  }

  public Device addSshKeysItem(Href sshKeysItem) {
    if (this.sshKeys == null) {
      this.sshKeys = new ArrayList<Href>();
    }
    this.sshKeys.add(sshKeysItem);
    return this;
  }

   /**
   * Get sshKeys
   * @return sshKeys
  **/
  @ApiModelProperty(value = "")
  public List<Href> getSshKeys() {
    return sshKeys;
  }

  public void setSshKeys(List<Href> sshKeys) {
    this.sshKeys = sshKeys;
  }

  public Device ipAddresses(List<IPAssignment> ipAddresses) {
    this.ipAddresses = ipAddresses;
    return this;
  }

  public Device addIpAddressesItem(IPAssignment ipAddressesItem) {
    if (this.ipAddresses == null) {
      this.ipAddresses = new ArrayList<IPAssignment>();
    }
    this.ipAddresses.add(ipAddressesItem);
    return this;
  }

   /**
   * Get ipAddresses
   * @return ipAddresses
  **/
  @ApiModelProperty(value = "")
  public List<IPAssignment> getIpAddresses() {
    return ipAddresses;
  }

  public void setIpAddresses(List<IPAssignment> ipAddresses) {
    this.ipAddresses = ipAddresses;
  }

  public Device provisioningEvents(List<Event> provisioningEvents) {
    this.provisioningEvents = provisioningEvents;
    return this;
  }

  public Device addProvisioningEventsItem(Event provisioningEventsItem) {
    if (this.provisioningEvents == null) {
      this.provisioningEvents = new ArrayList<Event>();
    }
    this.provisioningEvents.add(provisioningEventsItem);
    return this;
  }

   /**
   * Get provisioningEvents
   * @return provisioningEvents
  **/
  @ApiModelProperty(value = "")
  public List<Event> getProvisioningEvents() {
    return provisioningEvents;
  }

  public void setProvisioningEvents(List<Event> provisioningEvents) {
    this.provisioningEvents = provisioningEvents;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Device device = (Device) o;
    return Objects.equals(this.id, device.id) &&
        Objects.equals(this.shortId, device.shortId) &&
        Objects.equals(this.hostname, device.hostname) &&
        Objects.equals(this.description, device.description) &&
        Objects.equals(this.state, device.state) &&
        Objects.equals(this.tags, device.tags) &&
        Objects.equals(this.imageUrl, device.imageUrl) &&
        Objects.equals(this.billingCycle, device.billingCycle) &&
        Objects.equals(this.user, device.user) &&
        Objects.equals(this.iqn, device.iqn) &&
        Objects.equals(this.locked, device.locked) &&
        Objects.equals(this.bondingMode, device.bondingMode) &&
        Objects.equals(this.createdAt, device.createdAt) &&
        Objects.equals(this.updatedAt, device.updatedAt) &&
        Objects.equals(this.spotInstance, device.spotInstance) &&
        Objects.equals(this.spotPriceMax, device.spotPriceMax) &&
        Objects.equals(this.terminationTime, device.terminationTime) &&
        Objects.equals(this.customdata, device.customdata) &&
        Objects.equals(this.provisioningPercentage, device.provisioningPercentage) &&
        Objects.equals(this.operatingSystem, device.operatingSystem) &&
        Objects.equals(this.alwaysPxe, device.alwaysPxe) &&
        Objects.equals(this.ipxeScriptUrl, device.ipxeScriptUrl) &&
        Objects.equals(this.facility, device.facility) &&
        Objects.equals(this.metro, device.metro) &&
        Objects.equals(this.plan, device.plan) &&
        Objects.equals(this.userdata, device.userdata) &&
        Objects.equals(this.rootPassword, device.rootPassword) &&
        Objects.equals(this.switchUuid, device.switchUuid) &&
        Objects.equals(this.networkPorts, device.networkPorts) &&
        Objects.equals(this.href, device.href) &&
        Objects.equals(this.project, device.project) &&
        Objects.equals(this.projectLite, device.projectLite) &&
        Objects.equals(this.volumes, device.volumes) &&
        Objects.equals(this.hardwareReservation, device.hardwareReservation) &&
        Objects.equals(this.sshKeys, device.sshKeys) &&
        Objects.equals(this.ipAddresses, device.ipAddresses) &&
        Objects.equals(this.provisioningEvents, device.provisioningEvents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, shortId, hostname, description, state, tags, imageUrl, billingCycle, user, iqn, locked, bondingMode, createdAt, updatedAt, spotInstance, spotPriceMax, terminationTime, customdata, provisioningPercentage, operatingSystem, alwaysPxe, ipxeScriptUrl, facility, metro, plan, userdata, rootPassword, switchUuid, networkPorts, href, project, projectLite, volumes, hardwareReservation, sshKeys, ipAddresses, provisioningEvents);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Device {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    shortId: ").append(toIndentedString(shortId)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    billingCycle: ").append(toIndentedString(billingCycle)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    iqn: ").append(toIndentedString(iqn)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    bondingMode: ").append(toIndentedString(bondingMode)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    spotInstance: ").append(toIndentedString(spotInstance)).append("\n");
    sb.append("    spotPriceMax: ").append(toIndentedString(spotPriceMax)).append("\n");
    sb.append("    terminationTime: ").append(toIndentedString(terminationTime)).append("\n");
    sb.append("    customdata: ").append(toIndentedString(customdata)).append("\n");
    sb.append("    provisioningPercentage: ").append(toIndentedString(provisioningPercentage)).append("\n");
    sb.append("    operatingSystem: ").append(toIndentedString(operatingSystem)).append("\n");
    sb.append("    alwaysPxe: ").append(toIndentedString(alwaysPxe)).append("\n");
    sb.append("    ipxeScriptUrl: ").append(toIndentedString(ipxeScriptUrl)).append("\n");
    sb.append("    facility: ").append(toIndentedString(facility)).append("\n");
    sb.append("    metro: ").append(toIndentedString(metro)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    userdata: ").append(toIndentedString(userdata)).append("\n");
    sb.append("    rootPassword: ").append(toIndentedString(rootPassword)).append("\n");
    sb.append("    switchUuid: ").append(toIndentedString(switchUuid)).append("\n");
    sb.append("    networkPorts: ").append(toIndentedString(networkPorts)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    projectLite: ").append(toIndentedString(projectLite)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("    hardwareReservation: ").append(toIndentedString(hardwareReservation)).append("\n");
    sb.append("    sshKeys: ").append(toIndentedString(sshKeys)).append("\n");
    sb.append("    ipAddresses: ").append(toIndentedString(ipAddresses)).append("\n");
    sb.append("    provisioningEvents: ").append(toIndentedString(provisioningEvents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

