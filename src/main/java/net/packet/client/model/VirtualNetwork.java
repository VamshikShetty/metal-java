/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.packet.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import net.packet.client.model.Href;

/**
 * VirtualNetwork
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-12-14T20:42:56.777Z")
public class VirtualNetwork {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("description")
  private UUID description = null;

  @SerializedName("vxlan")
  private Integer vxlan = null;

  @SerializedName("facility")
  private Href facility = null;

  @SerializedName("instances")
  private List<Href> instances = null;

  @SerializedName("metro_code")
  private String metroCode = null;

  @SerializedName("metro")
  private Href metro = null;

  @SerializedName("assigned_to_virtual_circuit")
  private Boolean assignedToVirtualCircuit = null;

  @SerializedName("assigned_to")
  private Href assignedTo = null;

  @SerializedName("href")
  private String href = null;

  public VirtualNetwork id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public VirtualNetwork description(UUID description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public UUID getDescription() {
    return description;
  }

  public void setDescription(UUID description) {
    this.description = description;
  }

  public VirtualNetwork vxlan(Integer vxlan) {
    this.vxlan = vxlan;
    return this;
  }

   /**
   * Get vxlan
   * @return vxlan
  **/
  @ApiModelProperty(value = "")
  public Integer getVxlan() {
    return vxlan;
  }

  public void setVxlan(Integer vxlan) {
    this.vxlan = vxlan;
  }

  public VirtualNetwork facility(Href facility) {
    this.facility = facility;
    return this;
  }

   /**
   * Get facility
   * @return facility
  **/
  @ApiModelProperty(value = "")
  public Href getFacility() {
    return facility;
  }

  public void setFacility(Href facility) {
    this.facility = facility;
  }

  public VirtualNetwork instances(List<Href> instances) {
    this.instances = instances;
    return this;
  }

  public VirtualNetwork addInstancesItem(Href instancesItem) {
    if (this.instances == null) {
      this.instances = new ArrayList<Href>();
    }
    this.instances.add(instancesItem);
    return this;
  }

   /**
   * A list of instances with ports currently associated to this Virtual Network.
   * @return instances
  **/
  @ApiModelProperty(value = "A list of instances with ports currently associated to this Virtual Network.")
  public List<Href> getInstances() {
    return instances;
  }

  public void setInstances(List<Href> instances) {
    this.instances = instances;
  }

  public VirtualNetwork metroCode(String metroCode) {
    this.metroCode = metroCode;
    return this;
  }

   /**
   * The Metro code of the metro in which this Virtual Network is defined.
   * @return metroCode
  **/
  @ApiModelProperty(value = "The Metro code of the metro in which this Virtual Network is defined.")
  public String getMetroCode() {
    return metroCode;
  }

  public void setMetroCode(String metroCode) {
    this.metroCode = metroCode;
  }

  public VirtualNetwork metro(Href metro) {
    this.metro = metro;
    return this;
  }

   /**
   * Get metro
   * @return metro
  **/
  @ApiModelProperty(value = "")
  public Href getMetro() {
    return metro;
  }

  public void setMetro(Href metro) {
    this.metro = metro;
  }

  public VirtualNetwork assignedToVirtualCircuit(Boolean assignedToVirtualCircuit) {
    this.assignedToVirtualCircuit = assignedToVirtualCircuit;
    return this;
  }

   /**
   * True if the virtual network is attached to a virtual circuit. False if not.
   * @return assignedToVirtualCircuit
  **/
  @ApiModelProperty(value = "True if the virtual network is attached to a virtual circuit. False if not.")
  public Boolean isAssignedToVirtualCircuit() {
    return assignedToVirtualCircuit;
  }

  public void setAssignedToVirtualCircuit(Boolean assignedToVirtualCircuit) {
    this.assignedToVirtualCircuit = assignedToVirtualCircuit;
  }

  public VirtualNetwork assignedTo(Href assignedTo) {
    this.assignedTo = assignedTo;
    return this;
  }

   /**
   * Get assignedTo
   * @return assignedTo
  **/
  @ApiModelProperty(value = "")
  public Href getAssignedTo() {
    return assignedTo;
  }

  public void setAssignedTo(Href assignedTo) {
    this.assignedTo = assignedTo;
  }

  public VirtualNetwork href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @ApiModelProperty(value = "")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualNetwork virtualNetwork = (VirtualNetwork) o;
    return Objects.equals(this.id, virtualNetwork.id) &&
        Objects.equals(this.description, virtualNetwork.description) &&
        Objects.equals(this.vxlan, virtualNetwork.vxlan) &&
        Objects.equals(this.facility, virtualNetwork.facility) &&
        Objects.equals(this.instances, virtualNetwork.instances) &&
        Objects.equals(this.metroCode, virtualNetwork.metroCode) &&
        Objects.equals(this.metro, virtualNetwork.metro) &&
        Objects.equals(this.assignedToVirtualCircuit, virtualNetwork.assignedToVirtualCircuit) &&
        Objects.equals(this.assignedTo, virtualNetwork.assignedTo) &&
        Objects.equals(this.href, virtualNetwork.href);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, description, vxlan, facility, instances, metroCode, metro, assignedToVirtualCircuit, assignedTo, href);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualNetwork {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    vxlan: ").append(toIndentedString(vxlan)).append("\n");
    sb.append("    facility: ").append(toIndentedString(facility)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    metroCode: ").append(toIndentedString(metroCode)).append("\n");
    sb.append("    metro: ").append(toIndentedString(metro)).append("\n");
    sb.append("    assignedToVirtualCircuit: ").append(toIndentedString(assignedToVirtualCircuit)).append("\n");
    sb.append("    assignedTo: ").append(toIndentedString(assignedTo)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

