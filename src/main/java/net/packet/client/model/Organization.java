/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.packet.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import net.packet.client.model.Address;
import net.packet.client.model.Entitlement;
import net.packet.client.model.Href;
import org.threeten.bp.OffsetDateTime;

/**
 * Organization
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-12-14T20:42:56.777Z")
public class Organization {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("website")
  private String website = null;

  @SerializedName("twitter")
  private String twitter = null;

  @SerializedName("logo")
  private byte[] logo = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("projects")
  private List<Href> projects = null;

  @SerializedName("members")
  private List<Href> members = null;

  @SerializedName("memberships")
  private List<Href> memberships = null;

  @SerializedName("address")
  private Address address = null;

  @SerializedName("billing_address")
  private Address billingAddress = null;

  @SerializedName("entitlement")
  private Entitlement entitlement = null;

  @SerializedName("terms")
  private Integer terms = null;

  @SerializedName("credit_amount")
  private Float creditAmount = null;

  @SerializedName("customdata")
  private Object customdata = null;

  @SerializedName("enforce_2fa_at")
  private OffsetDateTime enforce2faAt = null;

  public Organization id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public Organization name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Organization description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Organization website(String website) {
    this.website = website;
    return this;
  }

   /**
   * Get website
   * @return website
  **/
  @ApiModelProperty(value = "")
  public String getWebsite() {
    return website;
  }

  public void setWebsite(String website) {
    this.website = website;
  }

  public Organization twitter(String twitter) {
    this.twitter = twitter;
    return this;
  }

   /**
   * Get twitter
   * @return twitter
  **/
  @ApiModelProperty(value = "")
  public String getTwitter() {
    return twitter;
  }

  public void setTwitter(String twitter) {
    this.twitter = twitter;
  }

  public Organization logo(byte[] logo) {
    this.logo = logo;
    return this;
  }

   /**
   * Get logo
   * @return logo
  **/
  @ApiModelProperty(value = "")
  public byte[] getLogo() {
    return logo;
  }

  public void setLogo(byte[] logo) {
    this.logo = logo;
  }

  public Organization createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Organization updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Organization projects(List<Href> projects) {
    this.projects = projects;
    return this;
  }

  public Organization addProjectsItem(Href projectsItem) {
    if (this.projects == null) {
      this.projects = new ArrayList<Href>();
    }
    this.projects.add(projectsItem);
    return this;
  }

   /**
   * Get projects
   * @return projects
  **/
  @ApiModelProperty(value = "")
  public List<Href> getProjects() {
    return projects;
  }

  public void setProjects(List<Href> projects) {
    this.projects = projects;
  }

  public Organization members(List<Href> members) {
    this.members = members;
    return this;
  }

  public Organization addMembersItem(Href membersItem) {
    if (this.members == null) {
      this.members = new ArrayList<Href>();
    }
    this.members.add(membersItem);
    return this;
  }

   /**
   * Get members
   * @return members
  **/
  @ApiModelProperty(value = "")
  public List<Href> getMembers() {
    return members;
  }

  public void setMembers(List<Href> members) {
    this.members = members;
  }

  public Organization memberships(List<Href> memberships) {
    this.memberships = memberships;
    return this;
  }

  public Organization addMembershipsItem(Href membershipsItem) {
    if (this.memberships == null) {
      this.memberships = new ArrayList<Href>();
    }
    this.memberships.add(membershipsItem);
    return this;
  }

   /**
   * Get memberships
   * @return memberships
  **/
  @ApiModelProperty(value = "")
  public List<Href> getMemberships() {
    return memberships;
  }

  public void setMemberships(List<Href> memberships) {
    this.memberships = memberships;
  }

  public Organization address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(value = "")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }

  public Organization billingAddress(Address billingAddress) {
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Get billingAddress
   * @return billingAddress
  **/
  @ApiModelProperty(value = "")
  public Address getBillingAddress() {
    return billingAddress;
  }

  public void setBillingAddress(Address billingAddress) {
    this.billingAddress = billingAddress;
  }

  public Organization entitlement(Entitlement entitlement) {
    this.entitlement = entitlement;
    return this;
  }

   /**
   * Get entitlement
   * @return entitlement
  **/
  @ApiModelProperty(value = "")
  public Entitlement getEntitlement() {
    return entitlement;
  }

  public void setEntitlement(Entitlement entitlement) {
    this.entitlement = entitlement;
  }

  public Organization terms(Integer terms) {
    this.terms = terms;
    return this;
  }

   /**
   * Get terms
   * @return terms
  **/
  @ApiModelProperty(value = "")
  public Integer getTerms() {
    return terms;
  }

  public void setTerms(Integer terms) {
    this.terms = terms;
  }

  public Organization creditAmount(Float creditAmount) {
    this.creditAmount = creditAmount;
    return this;
  }

   /**
   * Get creditAmount
   * @return creditAmount
  **/
  @ApiModelProperty(value = "")
  public Float getCreditAmount() {
    return creditAmount;
  }

  public void setCreditAmount(Float creditAmount) {
    this.creditAmount = creditAmount;
  }

  public Organization customdata(Object customdata) {
    this.customdata = customdata;
    return this;
  }

   /**
   * Get customdata
   * @return customdata
  **/
  @ApiModelProperty(value = "")
  public Object getCustomdata() {
    return customdata;
  }

  public void setCustomdata(Object customdata) {
    this.customdata = customdata;
  }

  public Organization enforce2faAt(OffsetDateTime enforce2faAt) {
    this.enforce2faAt = enforce2faAt;
    return this;
  }

   /**
   * Force to all members to have enabled the two factor authentication after that date, unless the value is null
   * @return enforce2faAt
  **/
  @ApiModelProperty(value = "Force to all members to have enabled the two factor authentication after that date, unless the value is null")
  public OffsetDateTime getEnforce2faAt() {
    return enforce2faAt;
  }

  public void setEnforce2faAt(OffsetDateTime enforce2faAt) {
    this.enforce2faAt = enforce2faAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Organization organization = (Organization) o;
    return Objects.equals(this.id, organization.id) &&
        Objects.equals(this.name, organization.name) &&
        Objects.equals(this.description, organization.description) &&
        Objects.equals(this.website, organization.website) &&
        Objects.equals(this.twitter, organization.twitter) &&
        Arrays.equals(this.logo, organization.logo) &&
        Objects.equals(this.createdAt, organization.createdAt) &&
        Objects.equals(this.updatedAt, organization.updatedAt) &&
        Objects.equals(this.projects, organization.projects) &&
        Objects.equals(this.members, organization.members) &&
        Objects.equals(this.memberships, organization.memberships) &&
        Objects.equals(this.address, organization.address) &&
        Objects.equals(this.billingAddress, organization.billingAddress) &&
        Objects.equals(this.entitlement, organization.entitlement) &&
        Objects.equals(this.terms, organization.terms) &&
        Objects.equals(this.creditAmount, organization.creditAmount) &&
        Objects.equals(this.customdata, organization.customdata) &&
        Objects.equals(this.enforce2faAt, organization.enforce2faAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, website, twitter, Arrays.hashCode(logo), createdAt, updatedAt, projects, members, memberships, address, billingAddress, entitlement, terms, creditAmount, customdata, enforce2faAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Organization {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    twitter: ").append(toIndentedString(twitter)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    projects: ").append(toIndentedString(projects)).append("\n");
    sb.append("    members: ").append(toIndentedString(members)).append("\n");
    sb.append("    memberships: ").append(toIndentedString(memberships)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    entitlement: ").append(toIndentedString(entitlement)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    creditAmount: ").append(toIndentedString(creditAmount)).append("\n");
    sb.append("    customdata: ").append(toIndentedString(customdata)).append("\n");
    sb.append("    enforce2faAt: ").append(toIndentedString(enforce2faAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

