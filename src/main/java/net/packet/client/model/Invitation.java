/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.packet.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import net.packet.client.model.Href;
import org.threeten.bp.OffsetDateTime;

/**
 * Invitation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-12-14T20:42:56.777Z")
public class Invitation {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("roles")
  private List<String> roles = null;

  @SerializedName("invitee")
  private String invitee = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("invited_by")
  private Href invitedBy = null;

  @SerializedName("organization")
  private Href organization = null;

  @SerializedName("projects_ids")
  private List<String> projectsIds = null;

  @SerializedName("invitation")
  private Href invitation = null;

  @SerializedName("href")
  private String href = null;

  public Invitation id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public Invitation roles(List<String> roles) {
    this.roles = roles;
    return this;
  }

  public Invitation addRolesItem(String rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<String>();
    }
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @ApiModelProperty(value = "")
  public List<String> getRoles() {
    return roles;
  }

  public void setRoles(List<String> roles) {
    this.roles = roles;
  }

  public Invitation invitee(String invitee) {
    this.invitee = invitee;
    return this;
  }

   /**
   * Get invitee
   * @return invitee
  **/
  @ApiModelProperty(value = "")
  public String getInvitee() {
    return invitee;
  }

  public void setInvitee(String invitee) {
    this.invitee = invitee;
  }

  public Invitation createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Invitation updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Invitation invitedBy(Href invitedBy) {
    this.invitedBy = invitedBy;
    return this;
  }

   /**
   * Get invitedBy
   * @return invitedBy
  **/
  @ApiModelProperty(value = "")
  public Href getInvitedBy() {
    return invitedBy;
  }

  public void setInvitedBy(Href invitedBy) {
    this.invitedBy = invitedBy;
  }

  public Invitation organization(Href organization) {
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @ApiModelProperty(value = "")
  public Href getOrganization() {
    return organization;
  }

  public void setOrganization(Href organization) {
    this.organization = organization;
  }

  public Invitation projectsIds(List<String> projectsIds) {
    this.projectsIds = projectsIds;
    return this;
  }

  public Invitation addProjectsIdsItem(String projectsIdsItem) {
    if (this.projectsIds == null) {
      this.projectsIds = new ArrayList<String>();
    }
    this.projectsIds.add(projectsIdsItem);
    return this;
  }

   /**
   * Get projectsIds
   * @return projectsIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getProjectsIds() {
    return projectsIds;
  }

  public void setProjectsIds(List<String> projectsIds) {
    this.projectsIds = projectsIds;
  }

  public Invitation invitation(Href invitation) {
    this.invitation = invitation;
    return this;
  }

   /**
   * Get invitation
   * @return invitation
  **/
  @ApiModelProperty(value = "")
  public Href getInvitation() {
    return invitation;
  }

  public void setInvitation(Href invitation) {
    this.invitation = invitation;
  }

  public Invitation href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @ApiModelProperty(value = "")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Invitation invitation = (Invitation) o;
    return Objects.equals(this.id, invitation.id) &&
        Objects.equals(this.roles, invitation.roles) &&
        Objects.equals(this.invitee, invitation.invitee) &&
        Objects.equals(this.createdAt, invitation.createdAt) &&
        Objects.equals(this.updatedAt, invitation.updatedAt) &&
        Objects.equals(this.invitedBy, invitation.invitedBy) &&
        Objects.equals(this.organization, invitation.organization) &&
        Objects.equals(this.projectsIds, invitation.projectsIds) &&
        Objects.equals(this.invitation, invitation.invitation) &&
        Objects.equals(this.href, invitation.href);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, roles, invitee, createdAt, updatedAt, invitedBy, organization, projectsIds, invitation, href);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Invitation {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    invitee: ").append(toIndentedString(invitee)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    invitedBy: ").append(toIndentedString(invitedBy)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    projectsIds: ").append(toIndentedString(projectsIds)).append("\n");
    sb.append("    invitation: ").append(toIndentedString(invitation)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

