/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.metal.v1.model.InlineResponse2006VirtualCircuits;
import com.equinix.openapi.metal.v1.model.InlineResponse200Devices;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * InterconnectionPort
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-20T13:48:24.543Z")
public class InterconnectionPort {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("organization")
  private InlineResponse200Devices organization = null;

  @SerializedName("role")
  private String role = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("switch_id")
  private String switchId = null;

  @SerializedName("virtual_circuits")
  private InlineResponse2006VirtualCircuits virtualCircuits = null;

  public InterconnectionPort id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public InterconnectionPort organization(InlineResponse200Devices organization) {
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @ApiModelProperty(value = "")
  public InlineResponse200Devices getOrganization() {
    return organization;
  }

  public void setOrganization(InlineResponse200Devices organization) {
    this.organization = organization;
  }

  public InterconnectionPort role(String role) {
    this.role = role;
    return this;
  }

   /**
   * Either &#39;primary&#39; or &#39;secondary&#39;.
   * @return role
  **/
  @ApiModelProperty(value = "Either 'primary' or 'secondary'.")
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }

  public InterconnectionPort status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public InterconnectionPort switchId(String switchId) {
    this.switchId = switchId;
    return this;
  }

   /**
   * A switch &#39;short ID&#39;
   * @return switchId
  **/
  @ApiModelProperty(value = "A switch 'short ID'")
  public String getSwitchId() {
    return switchId;
  }

  public void setSwitchId(String switchId) {
    this.switchId = switchId;
  }

  public InterconnectionPort virtualCircuits(InlineResponse2006VirtualCircuits virtualCircuits) {
    this.virtualCircuits = virtualCircuits;
    return this;
  }

   /**
   * Get virtualCircuits
   * @return virtualCircuits
  **/
  @ApiModelProperty(value = "")
  public InlineResponse2006VirtualCircuits getVirtualCircuits() {
    return virtualCircuits;
  }

  public void setVirtualCircuits(InlineResponse2006VirtualCircuits virtualCircuits) {
    this.virtualCircuits = virtualCircuits;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InterconnectionPort interconnectionPort = (InterconnectionPort) o;
    return Objects.equals(this.id, interconnectionPort.id) &&
        Objects.equals(this.organization, interconnectionPort.organization) &&
        Objects.equals(this.role, interconnectionPort.role) &&
        Objects.equals(this.status, interconnectionPort.status) &&
        Objects.equals(this.switchId, interconnectionPort.switchId) &&
        Objects.equals(this.virtualCircuits, interconnectionPort.virtualCircuits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, organization, role, status, switchId, virtualCircuits);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InterconnectionPort {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    switchId: ").append(toIndentedString(switchId)).append("\n");
    sb.append("    virtualCircuits: ").append(toIndentedString(virtualCircuits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

