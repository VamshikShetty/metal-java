/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.metal.v1.model.InlineResponse20046Vrfs;
import com.equinix.openapi.metal.v1.model.InlineResponse200Devices;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * VrfVirtualCircuit
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-20T13:48:24.543Z")
public class VrfVirtualCircuit {
  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("customer_ip")
  private String customerIp = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("md5")
  private String md5 = null;

  @SerializedName("metal_ip")
  private String metalIp = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nni_vlan")
  private Integer nniVlan = null;

  @SerializedName("peer_asn")
  private Integer peerAsn = null;

  @SerializedName("port")
  private InlineResponse200Devices port = null;

  @SerializedName("project")
  private InlineResponse200Devices project = null;

  @SerializedName("speed")
  private Integer speed = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("subnet")
  private String subnet = null;

  @SerializedName("vrf")
  private InlineResponse20046Vrfs vrf = null;

  public VrfVirtualCircuit tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public VrfVirtualCircuit addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public VrfVirtualCircuit customerIp(String customerIp) {
    this.customerIp = customerIp;
    return this;
  }

   /**
   * An IP address from the subnet that will be used on the Customer side. This parameter is optional, but if supplied, we will use the other usable IP address in the subnet as the Metal IP. By default, the last usable IP address in the subnet will be used.
   * @return customerIp
  **/
  @ApiModelProperty(example = "12.0.0.2", value = "An IP address from the subnet that will be used on the Customer side. This parameter is optional, but if supplied, we will use the other usable IP address in the subnet as the Metal IP. By default, the last usable IP address in the subnet will be used.")
  public String getCustomerIp() {
    return customerIp;
  }

  public void setCustomerIp(String customerIp) {
    this.customerIp = customerIp;
  }

  public VrfVirtualCircuit description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public VrfVirtualCircuit id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public VrfVirtualCircuit md5(String md5) {
    this.md5 = md5;
    return this;
  }

   /**
   * The MD5 password for the BGP peering in plaintext (not a checksum).
   * @return md5
  **/
  @ApiModelProperty(value = "The MD5 password for the BGP peering in plaintext (not a checksum).")
  public String getMd5() {
    return md5;
  }

  public void setMd5(String md5) {
    this.md5 = md5;
  }

  public VrfVirtualCircuit metalIp(String metalIp) {
    this.metalIp = metalIp;
    return this;
  }

   /**
   * An IP address from the subnet that will be used on the Metal side. This parameter is optional, but if supplied, we will use the other usable IP address in the subnet as the Customer IP. By default, the first usable IP address in the subnet will be used.
   * @return metalIp
  **/
  @ApiModelProperty(example = "12.0.0.1", value = "An IP address from the subnet that will be used on the Metal side. This parameter is optional, but if supplied, we will use the other usable IP address in the subnet as the Customer IP. By default, the first usable IP address in the subnet will be used.")
  public String getMetalIp() {
    return metalIp;
  }

  public void setMetalIp(String metalIp) {
    this.metalIp = metalIp;
  }

  public VrfVirtualCircuit name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public VrfVirtualCircuit nniVlan(Integer nniVlan) {
    this.nniVlan = nniVlan;
    return this;
  }

   /**
   * Get nniVlan
   * @return nniVlan
  **/
  @ApiModelProperty(value = "")
  public Integer getNniVlan() {
    return nniVlan;
  }

  public void setNniVlan(Integer nniVlan) {
    this.nniVlan = nniVlan;
  }

  public VrfVirtualCircuit peerAsn(Integer peerAsn) {
    this.peerAsn = peerAsn;
    return this;
  }

   /**
   * The peer ASN that will be used with the VRF on the Virtual Circuit.
   * @return peerAsn
  **/
  @ApiModelProperty(value = "The peer ASN that will be used with the VRF on the Virtual Circuit.")
  public Integer getPeerAsn() {
    return peerAsn;
  }

  public void setPeerAsn(Integer peerAsn) {
    this.peerAsn = peerAsn;
  }

  public VrfVirtualCircuit port(InlineResponse200Devices port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @ApiModelProperty(value = "")
  public InlineResponse200Devices getPort() {
    return port;
  }

  public void setPort(InlineResponse200Devices port) {
    this.port = port;
  }

  public VrfVirtualCircuit project(InlineResponse200Devices project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(value = "")
  public InlineResponse200Devices getProject() {
    return project;
  }

  public void setProject(InlineResponse200Devices project) {
    this.project = project;
  }

  public VrfVirtualCircuit speed(Integer speed) {
    this.speed = speed;
    return this;
  }

   /**
   * integer representing bps speed
   * @return speed
  **/
  @ApiModelProperty(value = "integer representing bps speed")
  public Integer getSpeed() {
    return speed;
  }

  public void setSpeed(Integer speed) {
    this.speed = speed;
  }

  public VrfVirtualCircuit status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public VrfVirtualCircuit subnet(String subnet) {
    this.subnet = subnet;
    return this;
  }

   /**
   * The /30 or /31 subnet of one of the VRF IP Blocks that will be used with the VRF for the Virtual Circuit. This subnet does not have to be an existing VRF IP reservation, as we will create the VRF IP reservation on creation if it does not exist. The Metal IP and Customer IP must be IPs from this subnet. For /30 subnets, the network and broadcast IPs cannot be used as the Metal or Customer IP.
   * @return subnet
  **/
  @ApiModelProperty(example = "12.0.0.0/30", value = "The /30 or /31 subnet of one of the VRF IP Blocks that will be used with the VRF for the Virtual Circuit. This subnet does not have to be an existing VRF IP reservation, as we will create the VRF IP reservation on creation if it does not exist. The Metal IP and Customer IP must be IPs from this subnet. For /30 subnets, the network and broadcast IPs cannot be used as the Metal or Customer IP.")
  public String getSubnet() {
    return subnet;
  }

  public void setSubnet(String subnet) {
    this.subnet = subnet;
  }

  public VrfVirtualCircuit vrf(InlineResponse20046Vrfs vrf) {
    this.vrf = vrf;
    return this;
  }

   /**
   * Get vrf
   * @return vrf
  **/
  @ApiModelProperty(value = "")
  public InlineResponse20046Vrfs getVrf() {
    return vrf;
  }

  public void setVrf(InlineResponse20046Vrfs vrf) {
    this.vrf = vrf;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VrfVirtualCircuit vrfVirtualCircuit = (VrfVirtualCircuit) o;
    return Objects.equals(this.tags, vrfVirtualCircuit.tags) &&
        Objects.equals(this.customerIp, vrfVirtualCircuit.customerIp) &&
        Objects.equals(this.description, vrfVirtualCircuit.description) &&
        Objects.equals(this.id, vrfVirtualCircuit.id) &&
        Objects.equals(this.md5, vrfVirtualCircuit.md5) &&
        Objects.equals(this.metalIp, vrfVirtualCircuit.metalIp) &&
        Objects.equals(this.name, vrfVirtualCircuit.name) &&
        Objects.equals(this.nniVlan, vrfVirtualCircuit.nniVlan) &&
        Objects.equals(this.peerAsn, vrfVirtualCircuit.peerAsn) &&
        Objects.equals(this.port, vrfVirtualCircuit.port) &&
        Objects.equals(this.project, vrfVirtualCircuit.project) &&
        Objects.equals(this.speed, vrfVirtualCircuit.speed) &&
        Objects.equals(this.status, vrfVirtualCircuit.status) &&
        Objects.equals(this.subnet, vrfVirtualCircuit.subnet) &&
        Objects.equals(this.vrf, vrfVirtualCircuit.vrf);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tags, customerIp, description, id, md5, metalIp, name, nniVlan, peerAsn, port, project, speed, status, subnet, vrf);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VrfVirtualCircuit {\n");
    
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    customerIp: ").append(toIndentedString(customerIp)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    md5: ").append(toIndentedString(md5)).append("\n");
    sb.append("    metalIp: ").append(toIndentedString(metalIp)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nniVlan: ").append(toIndentedString(nniVlan)).append("\n");
    sb.append("    peerAsn: ").append(toIndentedString(peerAsn)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    speed: ").append(toIndentedString(speed)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subnet: ").append(toIndentedString(subnet)).append("\n");
    sb.append("    vrf: ").append(toIndentedString(vrf)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

