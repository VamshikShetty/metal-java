/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * ProjectsidspotmarketrequestsInstanceAttributes
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-20T13:48:24.543Z")
public class ProjectsidspotmarketrequestsInstanceAttributes {
  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("always_pxe")
  private Boolean alwaysPxe = null;

  @SerializedName("billing_cycle")
  private String billingCycle = null;

  @SerializedName("customdata")
  private Object customdata = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("features")
  private List<String> features = null;

  @SerializedName("hostname")
  private String hostname = null;

  @SerializedName("hostnames")
  private List<String> hostnames = null;

  @SerializedName("locked")
  private Boolean locked = null;

  @SerializedName("no_ssh_keys")
  private Boolean noSshKeys = null;

  @SerializedName("operating_system")
  private String operatingSystem = null;

  @SerializedName("plan")
  private String plan = null;

  @SerializedName("private_ipv4_subnet_size")
  private Integer privateIpv4SubnetSize = null;

  @SerializedName("project_ssh_keys")
  private List<UUID> projectSshKeys = null;

  @SerializedName("public_ipv4_subnet_size")
  private Integer publicIpv4SubnetSize = null;

  @SerializedName("termination_time")
  private OffsetDateTime terminationTime = null;

  @SerializedName("user_ssh_keys")
  private List<UUID> userSshKeys = null;

  @SerializedName("userdata")
  private String userdata = null;

  public ProjectsidspotmarketrequestsInstanceAttributes tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes alwaysPxe(Boolean alwaysPxe) {
    this.alwaysPxe = alwaysPxe;
    return this;
  }

   /**
   * Get alwaysPxe
   * @return alwaysPxe
  **/
  @ApiModelProperty(value = "")
  public Boolean isAlwaysPxe() {
    return alwaysPxe;
  }

  public void setAlwaysPxe(Boolean alwaysPxe) {
    this.alwaysPxe = alwaysPxe;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes billingCycle(String billingCycle) {
    this.billingCycle = billingCycle;
    return this;
  }

   /**
   * Get billingCycle
   * @return billingCycle
  **/
  @ApiModelProperty(value = "")
  public String getBillingCycle() {
    return billingCycle;
  }

  public void setBillingCycle(String billingCycle) {
    this.billingCycle = billingCycle;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes customdata(Object customdata) {
    this.customdata = customdata;
    return this;
  }

   /**
   * Get customdata
   * @return customdata
  **/
  @ApiModelProperty(value = "")
  public Object getCustomdata() {
    return customdata;
  }

  public void setCustomdata(Object customdata) {
    this.customdata = customdata;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes features(List<String> features) {
    this.features = features;
    return this;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes addFeaturesItem(String featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<String>();
    }
    this.features.add(featuresItem);
    return this;
  }

   /**
   * Get features
   * @return features
  **/
  @ApiModelProperty(value = "")
  public List<String> getFeatures() {
    return features;
  }

  public void setFeatures(List<String> features) {
    this.features = features;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @ApiModelProperty(value = "")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes hostnames(List<String> hostnames) {
    this.hostnames = hostnames;
    return this;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes addHostnamesItem(String hostnamesItem) {
    if (this.hostnames == null) {
      this.hostnames = new ArrayList<String>();
    }
    this.hostnames.add(hostnamesItem);
    return this;
  }

   /**
   * Get hostnames
   * @return hostnames
  **/
  @ApiModelProperty(value = "")
  public List<String> getHostnames() {
    return hostnames;
  }

  public void setHostnames(List<String> hostnames) {
    this.hostnames = hostnames;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes locked(Boolean locked) {
    this.locked = locked;
    return this;
  }

   /**
   * Get locked
   * @return locked
  **/
  @ApiModelProperty(value = "")
  public Boolean isLocked() {
    return locked;
  }

  public void setLocked(Boolean locked) {
    this.locked = locked;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes noSshKeys(Boolean noSshKeys) {
    this.noSshKeys = noSshKeys;
    return this;
  }

   /**
   * Get noSshKeys
   * @return noSshKeys
  **/
  @ApiModelProperty(value = "")
  public Boolean isNoSshKeys() {
    return noSshKeys;
  }

  public void setNoSshKeys(Boolean noSshKeys) {
    this.noSshKeys = noSshKeys;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes operatingSystem(String operatingSystem) {
    this.operatingSystem = operatingSystem;
    return this;
  }

   /**
   * Get operatingSystem
   * @return operatingSystem
  **/
  @ApiModelProperty(value = "")
  public String getOperatingSystem() {
    return operatingSystem;
  }

  public void setOperatingSystem(String operatingSystem) {
    this.operatingSystem = operatingSystem;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes plan(String plan) {
    this.plan = plan;
    return this;
  }

   /**
   * Get plan
   * @return plan
  **/
  @ApiModelProperty(value = "")
  public String getPlan() {
    return plan;
  }

  public void setPlan(String plan) {
    this.plan = plan;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes privateIpv4SubnetSize(Integer privateIpv4SubnetSize) {
    this.privateIpv4SubnetSize = privateIpv4SubnetSize;
    return this;
  }

   /**
   * Get privateIpv4SubnetSize
   * @return privateIpv4SubnetSize
  **/
  @ApiModelProperty(value = "")
  public Integer getPrivateIpv4SubnetSize() {
    return privateIpv4SubnetSize;
  }

  public void setPrivateIpv4SubnetSize(Integer privateIpv4SubnetSize) {
    this.privateIpv4SubnetSize = privateIpv4SubnetSize;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes projectSshKeys(List<UUID> projectSshKeys) {
    this.projectSshKeys = projectSshKeys;
    return this;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes addProjectSshKeysItem(UUID projectSshKeysItem) {
    if (this.projectSshKeys == null) {
      this.projectSshKeys = new ArrayList<UUID>();
    }
    this.projectSshKeys.add(projectSshKeysItem);
    return this;
  }

   /**
   * Get projectSshKeys
   * @return projectSshKeys
  **/
  @ApiModelProperty(value = "")
  public List<UUID> getProjectSshKeys() {
    return projectSshKeys;
  }

  public void setProjectSshKeys(List<UUID> projectSshKeys) {
    this.projectSshKeys = projectSshKeys;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes publicIpv4SubnetSize(Integer publicIpv4SubnetSize) {
    this.publicIpv4SubnetSize = publicIpv4SubnetSize;
    return this;
  }

   /**
   * Get publicIpv4SubnetSize
   * @return publicIpv4SubnetSize
  **/
  @ApiModelProperty(value = "")
  public Integer getPublicIpv4SubnetSize() {
    return publicIpv4SubnetSize;
  }

  public void setPublicIpv4SubnetSize(Integer publicIpv4SubnetSize) {
    this.publicIpv4SubnetSize = publicIpv4SubnetSize;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes terminationTime(OffsetDateTime terminationTime) {
    this.terminationTime = terminationTime;
    return this;
  }

   /**
   * Get terminationTime
   * @return terminationTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getTerminationTime() {
    return terminationTime;
  }

  public void setTerminationTime(OffsetDateTime terminationTime) {
    this.terminationTime = terminationTime;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes userSshKeys(List<UUID> userSshKeys) {
    this.userSshKeys = userSshKeys;
    return this;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes addUserSshKeysItem(UUID userSshKeysItem) {
    if (this.userSshKeys == null) {
      this.userSshKeys = new ArrayList<UUID>();
    }
    this.userSshKeys.add(userSshKeysItem);
    return this;
  }

   /**
   * The UUIDs of users whose SSH keys should be included on the provisioned device.
   * @return userSshKeys
  **/
  @ApiModelProperty(value = "The UUIDs of users whose SSH keys should be included on the provisioned device.")
  public List<UUID> getUserSshKeys() {
    return userSshKeys;
  }

  public void setUserSshKeys(List<UUID> userSshKeys) {
    this.userSshKeys = userSshKeys;
  }

  public ProjectsidspotmarketrequestsInstanceAttributes userdata(String userdata) {
    this.userdata = userdata;
    return this;
  }

   /**
   * Get userdata
   * @return userdata
  **/
  @ApiModelProperty(value = "")
  public String getUserdata() {
    return userdata;
  }

  public void setUserdata(String userdata) {
    this.userdata = userdata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectsidspotmarketrequestsInstanceAttributes projectsidspotmarketrequestsInstanceAttributes = (ProjectsidspotmarketrequestsInstanceAttributes) o;
    return Objects.equals(this.tags, projectsidspotmarketrequestsInstanceAttributes.tags) &&
        Objects.equals(this.alwaysPxe, projectsidspotmarketrequestsInstanceAttributes.alwaysPxe) &&
        Objects.equals(this.billingCycle, projectsidspotmarketrequestsInstanceAttributes.billingCycle) &&
        Objects.equals(this.customdata, projectsidspotmarketrequestsInstanceAttributes.customdata) &&
        Objects.equals(this.description, projectsidspotmarketrequestsInstanceAttributes.description) &&
        Objects.equals(this.features, projectsidspotmarketrequestsInstanceAttributes.features) &&
        Objects.equals(this.hostname, projectsidspotmarketrequestsInstanceAttributes.hostname) &&
        Objects.equals(this.hostnames, projectsidspotmarketrequestsInstanceAttributes.hostnames) &&
        Objects.equals(this.locked, projectsidspotmarketrequestsInstanceAttributes.locked) &&
        Objects.equals(this.noSshKeys, projectsidspotmarketrequestsInstanceAttributes.noSshKeys) &&
        Objects.equals(this.operatingSystem, projectsidspotmarketrequestsInstanceAttributes.operatingSystem) &&
        Objects.equals(this.plan, projectsidspotmarketrequestsInstanceAttributes.plan) &&
        Objects.equals(this.privateIpv4SubnetSize, projectsidspotmarketrequestsInstanceAttributes.privateIpv4SubnetSize) &&
        Objects.equals(this.projectSshKeys, projectsidspotmarketrequestsInstanceAttributes.projectSshKeys) &&
        Objects.equals(this.publicIpv4SubnetSize, projectsidspotmarketrequestsInstanceAttributes.publicIpv4SubnetSize) &&
        Objects.equals(this.terminationTime, projectsidspotmarketrequestsInstanceAttributes.terminationTime) &&
        Objects.equals(this.userSshKeys, projectsidspotmarketrequestsInstanceAttributes.userSshKeys) &&
        Objects.equals(this.userdata, projectsidspotmarketrequestsInstanceAttributes.userdata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tags, alwaysPxe, billingCycle, customdata, description, features, hostname, hostnames, locked, noSshKeys, operatingSystem, plan, privateIpv4SubnetSize, projectSshKeys, publicIpv4SubnetSize, terminationTime, userSshKeys, userdata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectsidspotmarketrequestsInstanceAttributes {\n");
    
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    alwaysPxe: ").append(toIndentedString(alwaysPxe)).append("\n");
    sb.append("    billingCycle: ").append(toIndentedString(billingCycle)).append("\n");
    sb.append("    customdata: ").append(toIndentedString(customdata)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    hostnames: ").append(toIndentedString(hostnames)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    noSshKeys: ").append(toIndentedString(noSshKeys)).append("\n");
    sb.append("    operatingSystem: ").append(toIndentedString(operatingSystem)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    privateIpv4SubnetSize: ").append(toIndentedString(privateIpv4SubnetSize)).append("\n");
    sb.append("    projectSshKeys: ").append(toIndentedString(projectSshKeys)).append("\n");
    sb.append("    publicIpv4SubnetSize: ").append(toIndentedString(publicIpv4SubnetSize)).append("\n");
    sb.append("    terminationTime: ").append(toIndentedString(terminationTime)).append("\n");
    sb.append("    userSshKeys: ").append(toIndentedString(userSshKeys)).append("\n");
    sb.append("    userdata: ").append(toIndentedString(userdata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

