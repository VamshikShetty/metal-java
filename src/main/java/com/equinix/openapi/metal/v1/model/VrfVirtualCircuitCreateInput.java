/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * VrfVirtualCircuitCreateInput
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-20T13:48:24.543Z")
public class VrfVirtualCircuitCreateInput {
  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("customer_ip")
  private String customerIp = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("md5")
  private String md5 = null;

  @SerializedName("metal_ip")
  private String metalIp = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nni_vlan")
  private Integer nniVlan = null;

  @SerializedName("peer_asn")
  private Integer peerAsn = null;

  @SerializedName("project")
  private UUID project = null;

  @SerializedName("speed")
  private Integer speed = null;

  @SerializedName("subnet")
  private String subnet = null;

  @SerializedName("vrf")
  private UUID vrf = null;

  public VrfVirtualCircuitCreateInput tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public VrfVirtualCircuitCreateInput addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public VrfVirtualCircuitCreateInput customerIp(String customerIp) {
    this.customerIp = customerIp;
    return this;
  }

   /**
   * An IP address from the subnet that will be used on the Customer side. This parameter is optional, but if supplied, we will use the other usable IP address in the subnet as the Metal IP. By default, the last usable IP address in the subnet will be used.
   * @return customerIp
  **/
  @ApiModelProperty(example = "12.0.0.2", value = "An IP address from the subnet that will be used on the Customer side. This parameter is optional, but if supplied, we will use the other usable IP address in the subnet as the Metal IP. By default, the last usable IP address in the subnet will be used.")
  public String getCustomerIp() {
    return customerIp;
  }

  public void setCustomerIp(String customerIp) {
    this.customerIp = customerIp;
  }

  public VrfVirtualCircuitCreateInput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public VrfVirtualCircuitCreateInput md5(String md5) {
    this.md5 = md5;
    return this;
  }

   /**
   * The MD5 password for the BGP peering in plaintext (not a checksum).
   * @return md5
  **/
  @ApiModelProperty(value = "The MD5 password for the BGP peering in plaintext (not a checksum).")
  public String getMd5() {
    return md5;
  }

  public void setMd5(String md5) {
    this.md5 = md5;
  }

  public VrfVirtualCircuitCreateInput metalIp(String metalIp) {
    this.metalIp = metalIp;
    return this;
  }

   /**
   * An IP address from the subnet that will be used on the Metal side. This parameter is optional, but if supplied, we will use the other usable IP address in the subnet as the Customer IP. By default, the first usable IP address in the subnet will be used.
   * @return metalIp
  **/
  @ApiModelProperty(example = "12.0.0.1", value = "An IP address from the subnet that will be used on the Metal side. This parameter is optional, but if supplied, we will use the other usable IP address in the subnet as the Customer IP. By default, the first usable IP address in the subnet will be used.")
  public String getMetalIp() {
    return metalIp;
  }

  public void setMetalIp(String metalIp) {
    this.metalIp = metalIp;
  }

  public VrfVirtualCircuitCreateInput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public VrfVirtualCircuitCreateInput nniVlan(Integer nniVlan) {
    this.nniVlan = nniVlan;
    return this;
  }

   /**
   * Get nniVlan
   * minimum: 2
   * maximum: 4094
   * @return nniVlan
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getNniVlan() {
    return nniVlan;
  }

  public void setNniVlan(Integer nniVlan) {
    this.nniVlan = nniVlan;
  }

  public VrfVirtualCircuitCreateInput peerAsn(Integer peerAsn) {
    this.peerAsn = peerAsn;
    return this;
  }

   /**
   * The peer ASN that will be used with the VRF on the Virtual Circuit.
   * @return peerAsn
  **/
  @ApiModelProperty(required = true, value = "The peer ASN that will be used with the VRF on the Virtual Circuit.")
  public Integer getPeerAsn() {
    return peerAsn;
  }

  public void setPeerAsn(Integer peerAsn) {
    this.peerAsn = peerAsn;
  }

  public VrfVirtualCircuitCreateInput project(UUID project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(required = true, value = "")
  public UUID getProject() {
    return project;
  }

  public void setProject(UUID project) {
    this.project = project;
  }

  public VrfVirtualCircuitCreateInput speed(Integer speed) {
    this.speed = speed;
    return this;
  }

   /**
   * speed can be passed as integer number representing bps speed or string (e.g. &#39;52m&#39; or &#39;100g&#39; or &#39;4 gbps&#39;)
   * @return speed
  **/
  @ApiModelProperty(value = "speed can be passed as integer number representing bps speed or string (e.g. '52m' or '100g' or '4 gbps')")
  public Integer getSpeed() {
    return speed;
  }

  public void setSpeed(Integer speed) {
    this.speed = speed;
  }

  public VrfVirtualCircuitCreateInput subnet(String subnet) {
    this.subnet = subnet;
    return this;
  }

   /**
   * The /30 or /31 subnet of one of the VRF IP Blocks that will be used with the VRF for the Virtual Circuit. This subnet does not have to be an existing VRF IP reservation, as we will create the VRF IP reservation on creation if it does not exist. The Metal IP and Customer IP must be IPs from this subnet. For /30 subnets, the network and broadcast IPs cannot be used as the Metal or Customer IP. The subnet specified must be contained within an already-defined IP Range for the VRF.
   * @return subnet
  **/
  @ApiModelProperty(example = "12.0.0.0/30", required = true, value = "The /30 or /31 subnet of one of the VRF IP Blocks that will be used with the VRF for the Virtual Circuit. This subnet does not have to be an existing VRF IP reservation, as we will create the VRF IP reservation on creation if it does not exist. The Metal IP and Customer IP must be IPs from this subnet. For /30 subnets, the network and broadcast IPs cannot be used as the Metal or Customer IP. The subnet specified must be contained within an already-defined IP Range for the VRF.")
  public String getSubnet() {
    return subnet;
  }

  public void setSubnet(String subnet) {
    this.subnet = subnet;
  }

  public VrfVirtualCircuitCreateInput vrf(UUID vrf) {
    this.vrf = vrf;
    return this;
  }

   /**
   * The UUID of the VRF that will be associated with the Virtual Circuit.
   * @return vrf
  **/
  @ApiModelProperty(required = true, value = "The UUID of the VRF that will be associated with the Virtual Circuit.")
  public UUID getVrf() {
    return vrf;
  }

  public void setVrf(UUID vrf) {
    this.vrf = vrf;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VrfVirtualCircuitCreateInput vrfVirtualCircuitCreateInput = (VrfVirtualCircuitCreateInput) o;
    return Objects.equals(this.tags, vrfVirtualCircuitCreateInput.tags) &&
        Objects.equals(this.customerIp, vrfVirtualCircuitCreateInput.customerIp) &&
        Objects.equals(this.description, vrfVirtualCircuitCreateInput.description) &&
        Objects.equals(this.md5, vrfVirtualCircuitCreateInput.md5) &&
        Objects.equals(this.metalIp, vrfVirtualCircuitCreateInput.metalIp) &&
        Objects.equals(this.name, vrfVirtualCircuitCreateInput.name) &&
        Objects.equals(this.nniVlan, vrfVirtualCircuitCreateInput.nniVlan) &&
        Objects.equals(this.peerAsn, vrfVirtualCircuitCreateInput.peerAsn) &&
        Objects.equals(this.project, vrfVirtualCircuitCreateInput.project) &&
        Objects.equals(this.speed, vrfVirtualCircuitCreateInput.speed) &&
        Objects.equals(this.subnet, vrfVirtualCircuitCreateInput.subnet) &&
        Objects.equals(this.vrf, vrfVirtualCircuitCreateInput.vrf);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tags, customerIp, description, md5, metalIp, name, nniVlan, peerAsn, project, speed, subnet, vrf);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VrfVirtualCircuitCreateInput {\n");
    
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    customerIp: ").append(toIndentedString(customerIp)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    md5: ").append(toIndentedString(md5)).append("\n");
    sb.append("    metalIp: ").append(toIndentedString(metalIp)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nniVlan: ").append(toIndentedString(nniVlan)).append("\n");
    sb.append("    peerAsn: ").append(toIndentedString(peerAsn)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    speed: ").append(toIndentedString(speed)).append("\n");
    sb.append("    subnet: ").append(toIndentedString(subnet)).append("\n");
    sb.append("    vrf: ").append(toIndentedString(vrf)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

