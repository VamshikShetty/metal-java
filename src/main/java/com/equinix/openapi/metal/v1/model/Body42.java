/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.metal.v1.model.UsersEmails;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Body42
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-20T13:48:24.543Z")
public class Body42 {
  @SerializedName("avatar")
  private byte[] avatar = null;

  @SerializedName("company_name")
  private String companyName = null;

  @SerializedName("company_url")
  private String companyUrl = null;

  @SerializedName("customdata")
  private Object customdata = null;

  @SerializedName("emails")
  private List<UsersEmails> emails = new ArrayList<UsersEmails>();

  @SerializedName("first_name")
  private String firstName = null;

  @SerializedName("last_name")
  private String lastName = null;

  @SerializedName("level")
  private String level = null;

  @SerializedName("locked")
  private Boolean locked = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("phone_number")
  private String phoneNumber = null;

  @SerializedName("social_accounts")
  private Object socialAccounts = null;

  @SerializedName("timezone")
  private String timezone = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("two_factor_auth")
  private String twoFactorAuth = null;

  @SerializedName("verified_at")
  private OffsetDateTime verifiedAt = null;

  public Body42 avatar(byte[] avatar) {
    this.avatar = avatar;
    return this;
  }

   /**
   * Get avatar
   * @return avatar
  **/
  @ApiModelProperty(value = "")
  public byte[] getAvatar() {
    return avatar;
  }

  public void setAvatar(byte[] avatar) {
    this.avatar = avatar;
  }

  public Body42 companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

   /**
   * Get companyName
   * @return companyName
  **/
  @ApiModelProperty(value = "")
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }

  public Body42 companyUrl(String companyUrl) {
    this.companyUrl = companyUrl;
    return this;
  }

   /**
   * Get companyUrl
   * @return companyUrl
  **/
  @ApiModelProperty(value = "")
  public String getCompanyUrl() {
    return companyUrl;
  }

  public void setCompanyUrl(String companyUrl) {
    this.companyUrl = companyUrl;
  }

  public Body42 customdata(Object customdata) {
    this.customdata = customdata;
    return this;
  }

   /**
   * Get customdata
   * @return customdata
  **/
  @ApiModelProperty(value = "")
  public Object getCustomdata() {
    return customdata;
  }

  public void setCustomdata(Object customdata) {
    this.customdata = customdata;
  }

  public Body42 emails(List<UsersEmails> emails) {
    this.emails = emails;
    return this;
  }

  public Body42 addEmailsItem(UsersEmails emailsItem) {
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * Get emails
   * @return emails
  **/
  @ApiModelProperty(required = true, value = "")
  public List<UsersEmails> getEmails() {
    return emails;
  }

  public void setEmails(List<UsersEmails> emails) {
    this.emails = emails;
  }

  public Body42 firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public Body42 lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public Body42 level(String level) {
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @ApiModelProperty(value = "")
  public String getLevel() {
    return level;
  }

  public void setLevel(String level) {
    this.level = level;
  }

  public Body42 locked(Boolean locked) {
    this.locked = locked;
    return this;
  }

   /**
   * Get locked
   * @return locked
  **/
  @ApiModelProperty(value = "")
  public Boolean isLocked() {
    return locked;
  }

  public void setLocked(Boolean locked) {
    this.locked = locked;
  }

  public Body42 password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @ApiModelProperty(value = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public Body42 phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Get phoneNumber
   * @return phoneNumber
  **/
  @ApiModelProperty(value = "")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public Body42 socialAccounts(Object socialAccounts) {
    this.socialAccounts = socialAccounts;
    return this;
  }

   /**
   * Get socialAccounts
   * @return socialAccounts
  **/
  @ApiModelProperty(value = "")
  public Object getSocialAccounts() {
    return socialAccounts;
  }

  public void setSocialAccounts(Object socialAccounts) {
    this.socialAccounts = socialAccounts;
  }

  public Body42 timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @ApiModelProperty(value = "")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public Body42 title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Body42 twoFactorAuth(String twoFactorAuth) {
    this.twoFactorAuth = twoFactorAuth;
    return this;
  }

   /**
   * Get twoFactorAuth
   * @return twoFactorAuth
  **/
  @ApiModelProperty(value = "")
  public String getTwoFactorAuth() {
    return twoFactorAuth;
  }

  public void setTwoFactorAuth(String twoFactorAuth) {
    this.twoFactorAuth = twoFactorAuth;
  }

  public Body42 verifiedAt(OffsetDateTime verifiedAt) {
    this.verifiedAt = verifiedAt;
    return this;
  }

   /**
   * Get verifiedAt
   * @return verifiedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getVerifiedAt() {
    return verifiedAt;
  }

  public void setVerifiedAt(OffsetDateTime verifiedAt) {
    this.verifiedAt = verifiedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body42 body42 = (Body42) o;
    return Arrays.equals(this.avatar, body42.avatar) &&
        Objects.equals(this.companyName, body42.companyName) &&
        Objects.equals(this.companyUrl, body42.companyUrl) &&
        Objects.equals(this.customdata, body42.customdata) &&
        Objects.equals(this.emails, body42.emails) &&
        Objects.equals(this.firstName, body42.firstName) &&
        Objects.equals(this.lastName, body42.lastName) &&
        Objects.equals(this.level, body42.level) &&
        Objects.equals(this.locked, body42.locked) &&
        Objects.equals(this.password, body42.password) &&
        Objects.equals(this.phoneNumber, body42.phoneNumber) &&
        Objects.equals(this.socialAccounts, body42.socialAccounts) &&
        Objects.equals(this.timezone, body42.timezone) &&
        Objects.equals(this.title, body42.title) &&
        Objects.equals(this.twoFactorAuth, body42.twoFactorAuth) &&
        Objects.equals(this.verifiedAt, body42.verifiedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(Arrays.hashCode(avatar), companyName, companyUrl, customdata, emails, firstName, lastName, level, locked, password, phoneNumber, socialAccounts, timezone, title, twoFactorAuth, verifiedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body42 {\n");
    
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    companyUrl: ").append(toIndentedString(companyUrl)).append("\n");
    sb.append("    customdata: ").append(toIndentedString(customdata)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    socialAccounts: ").append(toIndentedString(socialAccounts)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    twoFactorAuth: ").append(toIndentedString(twoFactorAuth)).append("\n");
    sb.append("    verifiedAt: ").append(toIndentedString(verifiedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

