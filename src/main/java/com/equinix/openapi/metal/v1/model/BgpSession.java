/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.metal.v1.model.InlineResponse200Devices;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * BgpSession
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-20T13:48:24.543Z")
public class BgpSession {
  /**
   * Gets or Sets addressFamily
   */
  @JsonAdapter(AddressFamilyEnum.Adapter.class)
  public enum AddressFamilyEnum {
    IPV4("ipv4"),
    
    IPV6("ipv6");

    private String value;

    AddressFamilyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AddressFamilyEnum fromValue(String text) {
      for (AddressFamilyEnum b : AddressFamilyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AddressFamilyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AddressFamilyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AddressFamilyEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AddressFamilyEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("address_family")
  private AddressFamilyEnum addressFamily = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("default_route")
  private Boolean defaultRoute = null;

  @SerializedName("device")
  private InlineResponse200Devices device = null;

  @SerializedName("href")
  private String href = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("learned_routes")
  private List<String> learnedRoutes = null;

  /**
   *  The status of the BGP Session. Multiple status values may be reported when the device is connected to multiple switches, one value per switch. Each status will start with \&quot;unknown\&quot; and progress to \&quot;up\&quot; or \&quot;down\&quot; depending on the connected device. Subsequent \&quot;unknown\&quot; values indicate a problem acquiring status from the switch. 
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    UNKNOWN("unknown"),
    
    UP("up"),
    
    DOWN("down");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  public BgpSession addressFamily(AddressFamilyEnum addressFamily) {
    this.addressFamily = addressFamily;
    return this;
  }

   /**
   * Get addressFamily
   * @return addressFamily
  **/
  @ApiModelProperty(required = true, value = "")
  public AddressFamilyEnum getAddressFamily() {
    return addressFamily;
  }

  public void setAddressFamily(AddressFamilyEnum addressFamily) {
    this.addressFamily = addressFamily;
  }

  public BgpSession createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public BgpSession defaultRoute(Boolean defaultRoute) {
    this.defaultRoute = defaultRoute;
    return this;
  }

   /**
   * Get defaultRoute
   * @return defaultRoute
  **/
  @ApiModelProperty(value = "")
  public Boolean isDefaultRoute() {
    return defaultRoute;
  }

  public void setDefaultRoute(Boolean defaultRoute) {
    this.defaultRoute = defaultRoute;
  }

  public BgpSession device(InlineResponse200Devices device) {
    this.device = device;
    return this;
  }

   /**
   * Get device
   * @return device
  **/
  @ApiModelProperty(value = "")
  public InlineResponse200Devices getDevice() {
    return device;
  }

  public void setDevice(InlineResponse200Devices device) {
    this.device = device;
  }

  public BgpSession href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @ApiModelProperty(value = "")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public BgpSession id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public BgpSession learnedRoutes(List<String> learnedRoutes) {
    this.learnedRoutes = learnedRoutes;
    return this;
  }

  public BgpSession addLearnedRoutesItem(String learnedRoutesItem) {
    if (this.learnedRoutes == null) {
      this.learnedRoutes = new ArrayList<String>();
    }
    this.learnedRoutes.add(learnedRoutesItem);
    return this;
  }

   /**
   * Get learnedRoutes
   * @return learnedRoutes
  **/
  @ApiModelProperty(value = "")
  public List<String> getLearnedRoutes() {
    return learnedRoutes;
  }

  public void setLearnedRoutes(List<String> learnedRoutes) {
    this.learnedRoutes = learnedRoutes;
  }

  public BgpSession status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   *  The status of the BGP Session. Multiple status values may be reported when the device is connected to multiple switches, one value per switch. Each status will start with \&quot;unknown\&quot; and progress to \&quot;up\&quot; or \&quot;down\&quot; depending on the connected device. Subsequent \&quot;unknown\&quot; values indicate a problem acquiring status from the switch. 
   * @return status
  **/
  @ApiModelProperty(value = " The status of the BGP Session. Multiple status values may be reported when the device is connected to multiple switches, one value per switch. Each status will start with \"unknown\" and progress to \"up\" or \"down\" depending on the connected device. Subsequent \"unknown\" values indicate a problem acquiring status from the switch. ")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public BgpSession updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BgpSession bgpSession = (BgpSession) o;
    return Objects.equals(this.addressFamily, bgpSession.addressFamily) &&
        Objects.equals(this.createdAt, bgpSession.createdAt) &&
        Objects.equals(this.defaultRoute, bgpSession.defaultRoute) &&
        Objects.equals(this.device, bgpSession.device) &&
        Objects.equals(this.href, bgpSession.href) &&
        Objects.equals(this.id, bgpSession.id) &&
        Objects.equals(this.learnedRoutes, bgpSession.learnedRoutes) &&
        Objects.equals(this.status, bgpSession.status) &&
        Objects.equals(this.updatedAt, bgpSession.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressFamily, createdAt, defaultRoute, device, href, id, learnedRoutes, status, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BgpSession {\n");
    
    sb.append("    addressFamily: ").append(toIndentedString(addressFamily)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    defaultRoute: ").append(toIndentedString(defaultRoute)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    learnedRoutes: ").append(toIndentedString(learnedRoutes)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

