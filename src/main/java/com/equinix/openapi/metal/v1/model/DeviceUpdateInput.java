/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * DeviceUpdateInput
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-20T13:48:24.543Z")
public class DeviceUpdateInput {
  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("always_pxe")
  private Boolean alwaysPxe = null;

  @SerializedName("billing_cycle")
  private String billingCycle = null;

  @SerializedName("customdata")
  private Object customdata = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("hostname")
  private String hostname = null;

  @SerializedName("ipxe_script_url")
  private String ipxeScriptUrl = null;

  @SerializedName("locked")
  private Boolean locked = null;

  @SerializedName("network_frozen")
  private Boolean networkFrozen = null;

  @SerializedName("spot_instance")
  private Boolean spotInstance = null;

  @SerializedName("userdata")
  private String userdata = null;

  public DeviceUpdateInput tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public DeviceUpdateInput addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public DeviceUpdateInput alwaysPxe(Boolean alwaysPxe) {
    this.alwaysPxe = alwaysPxe;
    return this;
  }

   /**
   * Get alwaysPxe
   * @return alwaysPxe
  **/
  @ApiModelProperty(value = "")
  public Boolean isAlwaysPxe() {
    return alwaysPxe;
  }

  public void setAlwaysPxe(Boolean alwaysPxe) {
    this.alwaysPxe = alwaysPxe;
  }

  public DeviceUpdateInput billingCycle(String billingCycle) {
    this.billingCycle = billingCycle;
    return this;
  }

   /**
   * Get billingCycle
   * @return billingCycle
  **/
  @ApiModelProperty(value = "")
  public String getBillingCycle() {
    return billingCycle;
  }

  public void setBillingCycle(String billingCycle) {
    this.billingCycle = billingCycle;
  }

  public DeviceUpdateInput customdata(Object customdata) {
    this.customdata = customdata;
    return this;
  }

   /**
   * Get customdata
   * @return customdata
  **/
  @ApiModelProperty(value = "")
  public Object getCustomdata() {
    return customdata;
  }

  public void setCustomdata(Object customdata) {
    this.customdata = customdata;
  }

  public DeviceUpdateInput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DeviceUpdateInput hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @ApiModelProperty(value = "")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public DeviceUpdateInput ipxeScriptUrl(String ipxeScriptUrl) {
    this.ipxeScriptUrl = ipxeScriptUrl;
    return this;
  }

   /**
   * Get ipxeScriptUrl
   * @return ipxeScriptUrl
  **/
  @ApiModelProperty(value = "")
  public String getIpxeScriptUrl() {
    return ipxeScriptUrl;
  }

  public void setIpxeScriptUrl(String ipxeScriptUrl) {
    this.ipxeScriptUrl = ipxeScriptUrl;
  }

  public DeviceUpdateInput locked(Boolean locked) {
    this.locked = locked;
    return this;
  }

   /**
   * Get locked
   * @return locked
  **/
  @ApiModelProperty(value = "")
  public Boolean isLocked() {
    return locked;
  }

  public void setLocked(Boolean locked) {
    this.locked = locked;
  }

  public DeviceUpdateInput networkFrozen(Boolean networkFrozen) {
    this.networkFrozen = networkFrozen;
    return this;
  }

   /**
   * If true, this instance can not be converted to a different network type.
   * @return networkFrozen
  **/
  @ApiModelProperty(value = "If true, this instance can not be converted to a different network type.")
  public Boolean isNetworkFrozen() {
    return networkFrozen;
  }

  public void setNetworkFrozen(Boolean networkFrozen) {
    this.networkFrozen = networkFrozen;
  }

  public DeviceUpdateInput spotInstance(Boolean spotInstance) {
    this.spotInstance = spotInstance;
    return this;
  }

   /**
   * Get spotInstance
   * @return spotInstance
  **/
  @ApiModelProperty(value = "")
  public Boolean isSpotInstance() {
    return spotInstance;
  }

  public void setSpotInstance(Boolean spotInstance) {
    this.spotInstance = spotInstance;
  }

  public DeviceUpdateInput userdata(String userdata) {
    this.userdata = userdata;
    return this;
  }

   /**
   * Get userdata
   * @return userdata
  **/
  @ApiModelProperty(value = "")
  public String getUserdata() {
    return userdata;
  }

  public void setUserdata(String userdata) {
    this.userdata = userdata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceUpdateInput deviceUpdateInput = (DeviceUpdateInput) o;
    return Objects.equals(this.tags, deviceUpdateInput.tags) &&
        Objects.equals(this.alwaysPxe, deviceUpdateInput.alwaysPxe) &&
        Objects.equals(this.billingCycle, deviceUpdateInput.billingCycle) &&
        Objects.equals(this.customdata, deviceUpdateInput.customdata) &&
        Objects.equals(this.description, deviceUpdateInput.description) &&
        Objects.equals(this.hostname, deviceUpdateInput.hostname) &&
        Objects.equals(this.ipxeScriptUrl, deviceUpdateInput.ipxeScriptUrl) &&
        Objects.equals(this.locked, deviceUpdateInput.locked) &&
        Objects.equals(this.networkFrozen, deviceUpdateInput.networkFrozen) &&
        Objects.equals(this.spotInstance, deviceUpdateInput.spotInstance) &&
        Objects.equals(this.userdata, deviceUpdateInput.userdata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tags, alwaysPxe, billingCycle, customdata, description, hostname, ipxeScriptUrl, locked, networkFrozen, spotInstance, userdata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceUpdateInput {\n");
    
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    alwaysPxe: ").append(toIndentedString(alwaysPxe)).append("\n");
    sb.append("    billingCycle: ").append(toIndentedString(billingCycle)).append("\n");
    sb.append("    customdata: ").append(toIndentedString(customdata)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    ipxeScriptUrl: ").append(toIndentedString(ipxeScriptUrl)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    networkFrozen: ").append(toIndentedString(networkFrozen)).append("\n");
    sb.append("    spotInstance: ").append(toIndentedString(spotInstance)).append("\n");
    sb.append("    userdata: ").append(toIndentedString(userdata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

