/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.metal.v1.model.InlineResponse2001;
import com.equinix.openapi.metal.v1.model.InlineResponse20038Ranges;
import com.equinix.openapi.metal.v1.model.InlineResponse200Devices;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * InlineResponse20038
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-20T13:48:24.543Z")
public class InlineResponse20038 {
  @SerializedName("asn")
  private Integer asn = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  /**
   * In a Local BGP deployment, a customer uses an internal ASN to control routes within a single Equinix Metal datacenter. This means that the routes are never advertised to the global Internet. Global BGP, on the other hand, requires a customer to have a registered ASN and IP space. 
   */
  @JsonAdapter(DeploymentTypeEnum.Adapter.class)
  public enum DeploymentTypeEnum {
    GLOBAL("global"),
    
    LOCAL("local");

    private String value;

    DeploymentTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DeploymentTypeEnum fromValue(String text) {
      for (DeploymentTypeEnum b : DeploymentTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DeploymentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DeploymentTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DeploymentTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DeploymentTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("deployment_type")
  private DeploymentTypeEnum deploymentType = null;

  @SerializedName("href")
  private String href = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("max_prefix")
  private Integer maxPrefix = null;

  @SerializedName("md5")
  private String md5 = null;

  @SerializedName("project")
  private InlineResponse200Devices project = null;

  @SerializedName("ranges")
  private List<InlineResponse20038Ranges> ranges = null;

  @SerializedName("requested_at")
  private OffsetDateTime requestedAt = null;

  @SerializedName("route_object")
  private String routeObject = null;

  @SerializedName("sessions")
  private List<InlineResponse2001> sessions = null;

  /**
   * Status of the BGP Config. Status \&quot;requested\&quot; is valid only with the \&quot;global\&quot; deployment_type.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    REQUESTED("requested"),
    
    ENABLED("enabled"),
    
    DISABLED("disabled");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  public InlineResponse20038 asn(Integer asn) {
    this.asn = asn;
    return this;
  }

   /**
   * Autonomous System Number. ASN is required with Global BGP. With Local BGP the private ASN, 65000, is assigned.
   * @return asn
  **/
  @ApiModelProperty(example = "65000", value = "Autonomous System Number. ASN is required with Global BGP. With Local BGP the private ASN, 65000, is assigned.")
  public Integer getAsn() {
    return asn;
  }

  public void setAsn(Integer asn) {
    this.asn = asn;
  }

  public InlineResponse20038 createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public InlineResponse20038 deploymentType(DeploymentTypeEnum deploymentType) {
    this.deploymentType = deploymentType;
    return this;
  }

   /**
   * In a Local BGP deployment, a customer uses an internal ASN to control routes within a single Equinix Metal datacenter. This means that the routes are never advertised to the global Internet. Global BGP, on the other hand, requires a customer to have a registered ASN and IP space. 
   * @return deploymentType
  **/
  @ApiModelProperty(example = "local", value = "In a Local BGP deployment, a customer uses an internal ASN to control routes within a single Equinix Metal datacenter. This means that the routes are never advertised to the global Internet. Global BGP, on the other hand, requires a customer to have a registered ASN and IP space. ")
  public DeploymentTypeEnum getDeploymentType() {
    return deploymentType;
  }

  public void setDeploymentType(DeploymentTypeEnum deploymentType) {
    this.deploymentType = deploymentType;
  }

  public InlineResponse20038 href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @ApiModelProperty(value = "")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public InlineResponse20038 id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public InlineResponse20038 maxPrefix(Integer maxPrefix) {
    this.maxPrefix = maxPrefix;
    return this;
  }

   /**
   * The maximum number of route filters allowed per server
   * @return maxPrefix
  **/
  @ApiModelProperty(value = "The maximum number of route filters allowed per server")
  public Integer getMaxPrefix() {
    return maxPrefix;
  }

  public void setMaxPrefix(Integer maxPrefix) {
    this.maxPrefix = maxPrefix;
  }

  public InlineResponse20038 md5(String md5) {
    this.md5 = md5;
    return this;
  }

   /**
   * (Optional) Password for BGP session in plaintext (not a checksum)
   * @return md5
  **/
  @ApiModelProperty(value = "(Optional) Password for BGP session in plaintext (not a checksum)")
  public String getMd5() {
    return md5;
  }

  public void setMd5(String md5) {
    this.md5 = md5;
  }

  public InlineResponse20038 project(InlineResponse200Devices project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(value = "")
  public InlineResponse200Devices getProject() {
    return project;
  }

  public void setProject(InlineResponse200Devices project) {
    this.project = project;
  }

  public InlineResponse20038 ranges(List<InlineResponse20038Ranges> ranges) {
    this.ranges = ranges;
    return this;
  }

  public InlineResponse20038 addRangesItem(InlineResponse20038Ranges rangesItem) {
    if (this.ranges == null) {
      this.ranges = new ArrayList<InlineResponse20038Ranges>();
    }
    this.ranges.add(rangesItem);
    return this;
  }

   /**
   * The IP block ranges associated to the ASN (Populated in Global BGP only)
   * @return ranges
  **/
  @ApiModelProperty(value = "The IP block ranges associated to the ASN (Populated in Global BGP only)")
  public List<InlineResponse20038Ranges> getRanges() {
    return ranges;
  }

  public void setRanges(List<InlineResponse20038Ranges> ranges) {
    this.ranges = ranges;
  }

  public InlineResponse20038 requestedAt(OffsetDateTime requestedAt) {
    this.requestedAt = requestedAt;
    return this;
  }

   /**
   * Get requestedAt
   * @return requestedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getRequestedAt() {
    return requestedAt;
  }

  public void setRequestedAt(OffsetDateTime requestedAt) {
    this.requestedAt = requestedAt;
  }

  public InlineResponse20038 routeObject(String routeObject) {
    this.routeObject = routeObject;
    return this;
  }

   /**
   * Specifies AS-MACRO (aka AS-SET) to use when building client route filters
   * @return routeObject
  **/
  @ApiModelProperty(value = "Specifies AS-MACRO (aka AS-SET) to use when building client route filters")
  public String getRouteObject() {
    return routeObject;
  }

  public void setRouteObject(String routeObject) {
    this.routeObject = routeObject;
  }

  public InlineResponse20038 sessions(List<InlineResponse2001> sessions) {
    this.sessions = sessions;
    return this;
  }

  public InlineResponse20038 addSessionsItem(InlineResponse2001 sessionsItem) {
    if (this.sessions == null) {
      this.sessions = new ArrayList<InlineResponse2001>();
    }
    this.sessions.add(sessionsItem);
    return this;
  }

   /**
   * The direct connections between neighboring routers that want to exchange routing information.
   * @return sessions
  **/
  @ApiModelProperty(value = "The direct connections between neighboring routers that want to exchange routing information.")
  public List<InlineResponse2001> getSessions() {
    return sessions;
  }

  public void setSessions(List<InlineResponse2001> sessions) {
    this.sessions = sessions;
  }

  public InlineResponse20038 status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the BGP Config. Status \&quot;requested\&quot; is valid only with the \&quot;global\&quot; deployment_type.
   * @return status
  **/
  @ApiModelProperty(value = "Status of the BGP Config. Status \"requested\" is valid only with the \"global\" deployment_type.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20038 inlineResponse20038 = (InlineResponse20038) o;
    return Objects.equals(this.asn, inlineResponse20038.asn) &&
        Objects.equals(this.createdAt, inlineResponse20038.createdAt) &&
        Objects.equals(this.deploymentType, inlineResponse20038.deploymentType) &&
        Objects.equals(this.href, inlineResponse20038.href) &&
        Objects.equals(this.id, inlineResponse20038.id) &&
        Objects.equals(this.maxPrefix, inlineResponse20038.maxPrefix) &&
        Objects.equals(this.md5, inlineResponse20038.md5) &&
        Objects.equals(this.project, inlineResponse20038.project) &&
        Objects.equals(this.ranges, inlineResponse20038.ranges) &&
        Objects.equals(this.requestedAt, inlineResponse20038.requestedAt) &&
        Objects.equals(this.routeObject, inlineResponse20038.routeObject) &&
        Objects.equals(this.sessions, inlineResponse20038.sessions) &&
        Objects.equals(this.status, inlineResponse20038.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(asn, createdAt, deploymentType, href, id, maxPrefix, md5, project, ranges, requestedAt, routeObject, sessions, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20038 {\n");
    
    sb.append("    asn: ").append(toIndentedString(asn)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deploymentType: ").append(toIndentedString(deploymentType)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    maxPrefix: ").append(toIndentedString(maxPrefix)).append("\n");
    sb.append("    md5: ").append(toIndentedString(md5)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    ranges: ").append(toIndentedString(ranges)).append("\n");
    sb.append("    requestedAt: ").append(toIndentedString(requestedAt)).append("\n");
    sb.append("    routeObject: ").append(toIndentedString(routeObject)).append("\n");
    sb.append("    sessions: ").append(toIndentedString(sessions)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

