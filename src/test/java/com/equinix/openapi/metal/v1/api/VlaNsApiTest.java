/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.api;

import com.equinix.openapi.metal.v1.model.Body32;
import com.equinix.openapi.metal.v1.model.InlineResponse20045;
import com.equinix.openapi.metal.v1.model.InlineResponse20045VirtualNetworks;
import com.equinix.openapi.metal.v1.model.InlineResponse401;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VlaNsApi
 */
@Ignore
public class VlaNsApiTest {

    private final VlaNsApi api = new VlaNsApi();

    
    /**
     * Create a virtual network
     *
     * Creates an virtual network.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createVirtualNetworkTest() throws Exception {
        UUID id = null;
        Body32 body = null;
        InlineResponse20045VirtualNetworks response = api.createVirtualNetwork(id, body);

        // TODO: test validations
    }
    
    /**
     * Delete a virtual network
     *
     * Deletes a virtual network.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteVirtualNetworkTest() throws Exception {
        UUID id = null;
        InlineResponse20045VirtualNetworks response = api.deleteVirtualNetwork(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve all virtual networks
     *
     * Provides a list of virtual networks for a single project.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findVirtualNetworksTest() throws Exception {
        UUID id = null;
        List<String> include = null;
        List<String> exclude = null;
        String facility = null;
        String metro = null;
        InlineResponse20045 response = api.findVirtualNetworks(id, include, exclude, facility, metro);

        // TODO: test validations
    }
    
    /**
     * Get a virtual network
     *
     * Get a virtual network.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getVirtualNetworkTest() throws Exception {
        UUID id = null;
        InlineResponse20045VirtualNetworks response = api.getVirtualNetwork(id);

        // TODO: test validations
    }
    
}
