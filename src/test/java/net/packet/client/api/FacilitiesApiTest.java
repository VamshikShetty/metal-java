/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.packet.client.api;

import net.packet.client.model.Error;
import net.packet.client.model.FacilityList;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FacilitiesApi
 */
@Ignore
public class FacilitiesApiTest {

    private final FacilitiesApi api = new FacilitiesApi();

    
    /**
     * Retrieve all facilities
     *
     * Provides a listing of available datacenters where you can provision Packet devices.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findFacilitiesTest() throws Exception {
        List<String> include = null;
        List<String> exclude = null;
        FacilityList response = api.findFacilities(include, exclude);

        // TODO: test validations
    }
    
    /**
     * Retrieve all facilities visible by the organization
     *
     * Returns a listing of available datacenters for the given organization
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findFacilitiesByOrganizationTest() throws Exception {
        UUID id = null;
        List<String> include = null;
        List<String> exclude = null;
        FacilityList response = api.findFacilitiesByOrganization(id, include, exclude);

        // TODO: test validations
    }
    
    /**
     * Retrieve all facilities visible by the project
     *
     * Returns a listing of available datacenters for the given project
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findFacilitiesByProjectTest() throws Exception {
        UUID id = null;
        List<String> include = null;
        List<String> exclude = null;
        FacilityList response = api.findFacilitiesByProject(id, include, exclude);

        // TODO: test validations
    }
    
}
