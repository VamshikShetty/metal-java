/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.packet.client.api;

import net.packet.client.model.CapacityCheckPerFacilityList;
import net.packet.client.model.CapacityCheckPerMetroList;
import net.packet.client.model.CapacityInput;
import net.packet.client.model.CapacityList;
import net.packet.client.model.CapacityPerMetroInput;
import net.packet.client.model.Error;
import net.packet.client.model.MetroCapacityList;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CapacityApi
 */
@Ignore
public class CapacityApiTest {

    private final CapacityApi api = new CapacityApi();

    
    /**
     * Check capacity
     *
     * Validates if a deploy can be fulfilled.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void checkCapacityForFacilityTest() throws Exception {
        CapacityInput facility = null;
        CapacityCheckPerFacilityList response = api.checkCapacityForFacility(facility);

        // TODO: test validations
    }
    
    /**
     * Check capacity for a metro
     *
     * Validates if a deploy can be fulfilled in a metro.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void checkCapacityForMetroTest() throws Exception {
        CapacityPerMetroInput servers = null;
        CapacityCheckPerMetroList response = api.checkCapacityForMetro(servers);

        // TODO: test validations
    }
    
    /**
     * View capacity
     *
     * Returns a list of facilities and plans with their current capacity.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findCapacityForFacilityTest() throws Exception {
        CapacityList response = api.findCapacityForFacility();

        // TODO: test validations
    }
    
    /**
     * View capacity for metros
     *
     * Returns a list of metros and plans with their current capacity.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findCapacityForMetroTest() throws Exception {
        MetroCapacityList response = api.findCapacityForMetro();

        // TODO: test validations
    }
    
    /**
     * View available hardware plans per Facility for given organization
     *
     * Returns a list of facilities and plans with their current capacity.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findOrganizationCapacityPerFacilityTest() throws Exception {
        UUID id = null;
        CapacityList response = api.findOrganizationCapacityPerFacility(id);

        // TODO: test validations
    }
    
    /**
     * View available hardware plans per Metro for given organization
     *
     * Returns a list of metros and plans with their current capacity.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findOrganizationCapacityPerMetroTest() throws Exception {
        UUID id = null;
        MetroCapacityList response = api.findOrganizationCapacityPerMetro(id);

        // TODO: test validations
    }
    
}
