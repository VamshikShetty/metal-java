/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.packet.client.api;

import net.packet.client.model.Error;
import net.packet.client.model.License;
import net.packet.client.model.LicenseCreateInput;
import net.packet.client.model.LicenseList;
import net.packet.client.model.LicenseUpdateInput;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LicensesApi
 */
@Ignore
public class LicensesApiTest {

    private final LicensesApi api = new LicensesApi();

    
    /**
     * Create a License
     *
     * Creates a new license for the given project
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createLicenseTest() throws Exception {
        UUID id = null;
        LicenseCreateInput license = null;
        License response = api.createLicense(id, license);

        // TODO: test validations
    }
    
    /**
     * Delete the license
     *
     * Deletes a license.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteLicenseTest() throws Exception {
        UUID id = null;
        api.deleteLicense(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve a license
     *
     * Returns a license
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findLicenseByIdTest() throws Exception {
        UUID id = null;
        List<String> include = null;
        List<String> exclude = null;
        License response = api.findLicenseById(id, include, exclude);

        // TODO: test validations
    }
    
    /**
     * Retrieve all licenses
     *
     * Provides a collection of licenses for a given project.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findProjectLicensesTest() throws Exception {
        UUID id = null;
        List<String> include = null;
        List<String> exclude = null;
        Integer page = null;
        Integer perPage = null;
        LicenseList response = api.findProjectLicenses(id, include, exclude, page, perPage);

        // TODO: test validations
    }
    
    /**
     * Update the license
     *
     * Updates the license.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateLicenseTest() throws Exception {
        UUID id = null;
        LicenseUpdateInput license = null;
        License response = api.updateLicense(id, license);

        // TODO: test validations
    }
    
}
