/**
 * Packet API
 * This is the API for Packet. Interact with your devices, user account, and projects.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: help@packet.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package net.packet.client.api;

import net.packet.client.ApiException;
import net.packet.client.model.Volume;
import net.packet.client.model.VolumeCreateInput;
import net.packet.client.model.VolumeList;
import net.packet.client.model.VolumeUpdateInput;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VolumesApi
 */
public class VolumesApiTest {

    private final VolumesApi api = new VolumesApi();

    
    /**
     * Clone volume/snapshot
     *
     * Clone your volume or snapshot into a new volume. To clone the volume, send an empty body. To promote a volume snapshot into a new volume, include the snapshot_timestamp attribute in the request body.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cloneVolumeTest() throws ApiException {
        String id = null;
        String snapshotTimestamp = null;
        // Volume response = api.cloneVolume(id, snapshotTimestamp);

        // TODO: test validations
    }
    
    /**
     * Create a volume
     *
     * Creates a new volume in our datacenter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createVolumeTest() throws ApiException {
        String id = null;
        VolumeCreateInput volume = null;
        // Volume response = api.createVolume(id, volume);

        // TODO: test validations
    }
    
    /**
     * Delete the volume
     *
     * Deletes the volume.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteVolumeTest() throws ApiException {
        String id = null;
        // api.deleteVolume(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve a volume
     *
     * Returns a single volume if the user has access
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findVolumeByIdTest() throws ApiException {
        String id = null;
        String include = null;
        // Volume response = api.findVolumeById(id, include);

        // TODO: test validations
    }
    
    /**
     * Retrieve all volumes
     *
     * Returns a list of the current projectsâ€™s volumes.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findVolumesTest() throws ApiException {
        String id = null;
        String include = null;
        Integer page = null;
        Integer perPage = null;
        // VolumeList response = api.findVolumes(id, include, page, perPage);

        // TODO: test validations
    }
    
    /**
     * Restore volume
     *
     * Restore the volume to the given snapshot.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void restoreVolumeTest() throws ApiException {
        String id = null;
        String restorePoint = null;
        // Volume response = api.restoreVolume(id, restorePoint);

        // TODO: test validations
    }
    
    /**
     * Update the volume
     *
     * Updates the volume.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateVolumeTest() throws ApiException {
        String id = null;
        VolumeUpdateInput volume = null;
        // Volume response = api.updateVolume(id, volume);

        // TODO: test validations
    }
    
}
