/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.packet.client.api;

import net.packet.client.model.Error;
import net.packet.client.model.PaymentMethod;
import net.packet.client.model.PaymentMethodCreateInput;
import net.packet.client.model.PaymentMethodList;
import net.packet.client.model.PaymentMethodUpdateInput;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentMethodsApi
 */
@Ignore
public class PaymentMethodsApiTest {

    private final PaymentMethodsApi api = new PaymentMethodsApi();

    
    /**
     * Create a payment method for the given organization
     *
     * Creates a payment method.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createPaymentMethodTest() throws Exception {
        UUID id = null;
        PaymentMethodCreateInput paymentMethod = null;
        PaymentMethod response = api.createPaymentMethod(id, paymentMethod);

        // TODO: test validations
    }
    
    /**
     * Delete the payment method
     *
     * Deletes the payment method.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deletePaymentMethodTest() throws Exception {
        UUID id = null;
        api.deletePaymentMethod(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve all payment methods of an organization
     *
     * Returns all payment methods of an organization.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findOrganizationPaymentMethodsTest() throws Exception {
        UUID id = null;
        List<String> include = null;
        List<String> exclude = null;
        Integer page = null;
        Integer perPage = null;
        PaymentMethodList response = api.findOrganizationPaymentMethods(id, include, exclude, page, perPage);

        // TODO: test validations
    }
    
    /**
     * Retrieve a payment method
     *
     * Returns a payment method
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findPaymentMethodByIdTest() throws Exception {
        UUID id = null;
        List<String> include = null;
        List<String> exclude = null;
        PaymentMethod response = api.findPaymentMethodById(id, include, exclude);

        // TODO: test validations
    }
    
    /**
     * Update the payment method
     *
     * Updates the payment method.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updatePaymentMethodTest() throws Exception {
        UUID id = null;
        PaymentMethodUpdateInput paymentMethod = null;
        PaymentMethod response = api.updatePaymentMethod(id, paymentMethod);

        // TODO: test validations
    }
    
}
