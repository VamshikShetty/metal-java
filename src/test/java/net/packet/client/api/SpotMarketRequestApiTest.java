/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.packet.client.api;

import net.packet.client.model.Error;
import net.packet.client.model.SpotMarketRequest;
import net.packet.client.model.SpotMarketRequestCreateInput;
import net.packet.client.model.SpotMarketRequestList;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SpotMarketRequestApi
 */
@Ignore
public class SpotMarketRequestApiTest {

    private final SpotMarketRequestApi api = new SpotMarketRequestApi();

    
    /**
     * Create a spot market request
     *
     * Creates a new spot market request.  Type-specific options (such as operating_system for baremetal devices) should be included in the main data structure alongside hostname and plan.  The features attribute allows you to optionally specify what features your server should have. For example, if you require a server with a TPM chip, you may specify &#x60;{ \&quot;features\&quot;: { \&quot;tpm\&quot;: \&quot;required\&quot; } }&#x60; (or &#x60;{ \&quot;features\&quot;: [\&quot;tpm\&quot;] }&#x60; in shorthand).  The request will fail if there are no available servers matching your criteria. Alternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a preferred value (see the example request below).  The request will not fail if we have no servers with that feature in our inventory.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createSpotMarketRequestTest() throws Exception {
        UUID id = null;
        SpotMarketRequestCreateInput spotMarketRequest = null;
        SpotMarketRequest response = api.createSpotMarketRequest(id, spotMarketRequest);

        // TODO: test validations
    }
    
    /**
     * Delete the spot market request
     *
     * Deletes the spot market request.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteSpotMarketRequestTest() throws Exception {
        UUID id = null;
        Boolean forceTermination = null;
        api.deleteSpotMarketRequest(id, forceTermination);

        // TODO: test validations
    }
    
    /**
     * Retrieve a spot market request
     *
     * Returns a single spot market request
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findSpotMarketRequestByIdTest() throws Exception {
        UUID id = null;
        List<String> include = null;
        List<String> exclude = null;
        SpotMarketRequest response = api.findSpotMarketRequestById(id, include, exclude);

        // TODO: test validations
    }
    
    /**
     * List spot market requests
     *
     * View all spot market requests for a given project.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listSpotMarketRequestsTest() throws Exception {
        UUID id = null;
        SpotMarketRequestList response = api.listSpotMarketRequests(id);

        // TODO: test validations
    }
    
}
