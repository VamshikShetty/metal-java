/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.packet.client.api;

import net.packet.client.model.BGPSessionInput;
import net.packet.client.model.BgpConfig;
import net.packet.client.model.BgpConfigRequestInput;
import net.packet.client.model.BgpSession;
import net.packet.client.model.BgpSessionList;
import net.packet.client.model.BgpSessionNeighbors;
import net.packet.client.model.Error;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BgpApi
 */
@Ignore
public class BgpApiTest {

    private final BgpApi api = new BgpApi();

    
    /**
     * Create a BGP session
     *
     * Creates a BGP session.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createBgpSessionTest() throws Exception {
        UUID id = null;
        BGPSessionInput bgpSession = null;
        BgpSession response = api.createBgpSession(id, bgpSession);

        // TODO: test validations
    }
    
    /**
     * Delete the BGP session
     *
     * Deletes the BGP session.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteBgpSessionTest() throws Exception {
        UUID id = null;
        api.deleteBgpSession(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve a bgp config
     *
     * Returns a bgp config
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findBgpConfigByProjectTest() throws Exception {
        UUID id = null;
        List<String> include = null;
        List<String> exclude = null;
        BgpConfig response = api.findBgpConfigByProject(id, include, exclude);

        // TODO: test validations
    }
    
    /**
     * Retrieve a BGP session
     *
     * Returns a BGP session
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findBgpSessionByIdTest() throws Exception {
        UUID id = null;
        List<String> include = null;
        List<String> exclude = null;
        BgpSession response = api.findBgpSessionById(id, include, exclude);

        // TODO: test validations
    }
    
    /**
     * Retrieve all BGP sessions
     *
     * Provides a listing of available BGP sessions for the device.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findBgpSessionsTest() throws Exception {
        UUID id = null;
        BgpSessionList response = api.findBgpSessions(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve all BGP sessions for project
     *
     * Provides a listing of available BGP sessions for the project.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findProjectBgpSessionsTest() throws Exception {
        UUID id = null;
        BgpSessionList response = api.findProjectBgpSessions(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve BGP neighbor data for this device
     *
     * Provides a summary of the BGP neighbor data associated to the BGP sessions for this device.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getBgpNeighborDataTest() throws Exception {
        UUID id = null;
        BgpSessionNeighbors response = api.getBgpNeighborData(id);

        // TODO: test validations
    }
    
    /**
     * Requesting bgp config
     *
     * Requests to enable bgp configuration for a project.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void requestBgpConfigTest() throws Exception {
        UUID id = null;
        BgpConfigRequestInput bgpConfigRequest = null;
        api.requestBgpConfig(id, bgpConfigRequest);

        // TODO: test validations
    }
    
    /**
     * Update the BGP session
     *
     * Updates the BGP session by either enabling or disabling the default route functionality.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateBgpSessionTest() throws Exception {
        UUID id = null;
        Boolean defaultRoute = null;
        api.updateBgpSession(id, defaultRoute);

        // TODO: test validations
    }
    
}
