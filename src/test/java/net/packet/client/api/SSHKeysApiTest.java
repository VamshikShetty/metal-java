/**
 * Packet API
 * This is the API for Packet. Interact with your devices, user account, and projects.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: help@packet.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package net.packet.client.api;

import net.packet.client.ApiException;
import net.packet.client.model.SSHKey;
import net.packet.client.model.SSHKeyInput;
import net.packet.client.model.SSHKeyList;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SSHKeysApi
 */
public class SSHKeysApiTest {

    private final SSHKeysApi api = new SSHKeysApi();

    
    /**
     * Create a ssh key for the given project
     *
     * Creates a ssh key.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSSHKeyTest() throws ApiException {
        SSHKeyInput sshKey = null;
        // SSHKey response = api.createSSHKey(sshKey);

        // TODO: test validations
    }
    
    /**
     * Create a ssh key for the current user
     *
     * Creates a ssh key.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSSHKey_0Test() throws ApiException {
        SSHKeyInput sshKey = null;
        // SSHKey response = api.createSSHKey_0(sshKey);

        // TODO: test validations
    }
    
    /**
     * Delete the ssh key
     *
     * Deletes the ssh key.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSSHKeyTest() throws ApiException {
        String id = null;
        // api.deleteSSHKey(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve a ssh key
     *
     * Returns a single ssh key if the user has access
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findSSHKeyByIdTest() throws ApiException {
        String id = null;
        String include = null;
        // SSHKey response = api.findSSHKeyById(id, include);

        // TODO: test validations
    }
    
    /**
     * Retrieve a project&#39;s ssk keys
     *
     * Returns a collection of the project&#39;s ssh keys.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findSSHKeysTest() throws ApiException {
        String id = null;
        String include = null;
        // SSHKeyList response = api.findSSHKeys(id, include);

        // TODO: test validations
    }
    
    /**
     * Retrieve all ssk keys
     *
     * Returns a collection of the userâ€™s ssh keys.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findSSHKeys_0Test() throws ApiException {
        String include = null;
        // SSHKeyList response = api.findSSHKeys_0(include);

        // TODO: test validations
    }
    
    /**
     * Update the ssh key
     *
     * Updates the ssh key.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSSHKeyTest() throws ApiException {
        String id = null;
        SSHKeyInput sshKey = null;
        // SSHKey response = api.updateSSHKey(id, sshKey);

        // TODO: test validations
    }
    
}
